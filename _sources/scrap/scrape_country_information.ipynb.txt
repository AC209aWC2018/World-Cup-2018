{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/anaconda3/lib/python3.6/site-packages/fuzzywuzzy/fuzz.py:11: UserWarning: Using slow pure-python SequenceMatcher. Install python-Levenshtein to remove this warning\n",
      "  warnings.warn('Using slow pure-python SequenceMatcher. Install python-Levenshtein to remove this warning')\n"
     ]
    }
   ],
   "source": [
    "from bs4 import BeautifulSoup\n",
    "import requests\n",
    "import pandas as pd\n",
    "import unicodedata\n",
    "import re\n",
    "from map_countries import map_country\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def scrape_gdp_pp():\n",
    "    url = \"https://en.wikipedia.org/wiki/List_of_countries_by_GDP_(PPP)_per_capita\"\n",
    "    my_page = requests.get(url)\n",
    "    soup = BeautifulSoup(my_page.content, \"lxml\")\n",
    "    tables = soup.find_all('table',{'class':'wikitable sortable'})\n",
    "    country_rows = tables[0].findAll('tr')\n",
    "    countries_data = []\n",
    "\n",
    "    for country in country_rows[1:]:    \n",
    "        country_data = country.findAll('td')\n",
    "        name = country_data[1].text\n",
    "        country_name = unicodedata.normalize(\"NFKD\", name)\n",
    "        country_name = country_name.strip()\n",
    "        gdp_pp = int(country_data[2].text.strip().replace(',',''))\n",
    "#         if (country_name in worldcup_teams):\n",
    "        countries_data.append({\"name\":country_name,'gdp_pp':gdp_pp})\n",
    "\n",
    "    return pd.DataFrame(countries_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "gdp_df = scrape_gdp_pp()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cannot map world[n 1]\n",
      "Cannot map palau\n",
      "Cannot map nauru\n",
      "Cannot map tuvalu\n",
      "Cannot map marshall islands\n",
      "Cannot map micronesia\n",
      "Cannot map kiribati\n"
     ]
    }
   ],
   "source": [
    "gdp_df['name'] = gdp_df['name'].copy().apply(map_country)\n",
    "gdp_df = gdp_df[~gdp_df['name'].isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "def scrape_temp():\n",
    "    url = \"https://en.wikipedia.org/wiki/List_of_countries_by_average_yearly_temperature\"\n",
    "    my_page = requests.get(url)\n",
    "    soup = BeautifulSoup(my_page.content, \"lxml\")\n",
    "    tables = soup.find_all('table',{'class':'wikitable sortable'})\n",
    "    country_rows = tables[0].findAll('tr')\n",
    "    countries_temp = []\n",
    "    \n",
    "    for country in country_rows[1:]:    \n",
    "        country_data = country.findAll('td')\n",
    "        name = country_data[0].text\n",
    "        country_name = unicodedata.normalize(\"NFKD\", name)\n",
    "        country_name = country_name.strip()\n",
    "        temp_str = country_data[1].text.strip()\n",
    "        temp_str = temp_str.replace('âˆ’','-')\n",
    "        temp = float(temp_str)  \n",
    "#         if (country_name in worldcup_teams):\n",
    "        countries_temp.append({\"name\":country_name,'temp':temp})\n",
    "    return pd.DataFrame(countries_temp)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "temps = scrape_temp()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cannot map kiribati\n",
      "Cannot map tuvalu\n",
      "Cannot map palau\n",
      "Cannot map marshall islands\n",
      "Cannot map federated states of micronesia\n",
      "Cannot map monaco\n"
     ]
    }
   ],
   "source": [
    "temps['name'] = temps['name'].copy().apply(map_country)\n",
    "temps = temps[~temps['name'].isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'chinese taipei',\n",
       " 'hong kong',\n",
       " 'kosovo',\n",
       " 'macau',\n",
       " 'puerto rico',\n",
       " 'south sudan'}"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "set(gdp_df.name.unique()) - set(temps.name.unique()) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'andorra', 'cuba', 'korea dpr', 'liechtenstein', 'somalia', 'syria'}"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "set(temps.name.unique()) - set(gdp_df.name.unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "combined_df = temps.merge(gdp_df,on='name', how = 'outer')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>temp</th>\n",
       "      <th>gdp_pp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>burkina faso</td>\n",
       "      <td>28.25</td>\n",
       "      <td>1884.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>mali</td>\n",
       "      <td>28.25</td>\n",
       "      <td>2169.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>djibouti</td>\n",
       "      <td>28.00</td>\n",
       "      <td>3567.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>senegal</td>\n",
       "      <td>27.85</td>\n",
       "      <td>2678.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>mauritania</td>\n",
       "      <td>27.65</td>\n",
       "      <td>4474.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>maldives</td>\n",
       "      <td>27.65</td>\n",
       "      <td>19178.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>benin</td>\n",
       "      <td>27.55</td>\n",
       "      <td>2219.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>gambia</td>\n",
       "      <td>27.50</td>\n",
       "      <td>1686.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>ghana</td>\n",
       "      <td>27.20</td>\n",
       "      <td>4605.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>bahrain</td>\n",
       "      <td>27.15</td>\n",
       "      <td>51846.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>niger</td>\n",
       "      <td>27.15</td>\n",
       "      <td>1153.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>qatar</td>\n",
       "      <td>27.15</td>\n",
       "      <td>124927.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>seychelles</td>\n",
       "      <td>27.15</td>\n",
       "      <td>28712.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>togo</td>\n",
       "      <td>27.15</td>\n",
       "      <td>1612.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>somalia</td>\n",
       "      <td>27.05</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>united arab emirates</td>\n",
       "      <td>27.00</td>\n",
       "      <td>68245.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>sri lanka</td>\n",
       "      <td>26.95</td>\n",
       "      <td>13001.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>sudan</td>\n",
       "      <td>26.90</td>\n",
       "      <td>4580.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>brunei darussalam</td>\n",
       "      <td>26.85</td>\n",
       "      <td>76743.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>cambodia</td>\n",
       "      <td>26.80</td>\n",
       "      <td>4010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>nigeria</td>\n",
       "      <td>26.80</td>\n",
       "      <td>5927.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>st vincent and the grenadines</td>\n",
       "      <td>26.80</td>\n",
       "      <td>11623.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>guinea-bissau</td>\n",
       "      <td>26.75</td>\n",
       "      <td>1806.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>samoa</td>\n",
       "      <td>26.70</td>\n",
       "      <td>5737.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>grenada</td>\n",
       "      <td>26.65</td>\n",
       "      <td>14779.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>chad</td>\n",
       "      <td>26.55</td>\n",
       "      <td>2433.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>singapore</td>\n",
       "      <td>26.45</td>\n",
       "      <td>90531.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>cÃ´te d'ivoire</td>\n",
       "      <td>26.35</td>\n",
       "      <td>3857.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>thailand</td>\n",
       "      <td>26.30</td>\n",
       "      <td>17786.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>sierra leone</td>\n",
       "      <td>26.05</td>\n",
       "      <td>1791.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>denmark</td>\n",
       "      <td>7.50</td>\n",
       "      <td>49613.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>162</th>\n",
       "      <td>bhutan</td>\n",
       "      <td>7.40</td>\n",
       "      <td>8720.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>163</th>\n",
       "      <td>armenia</td>\n",
       "      <td>7.15</td>\n",
       "      <td>9098.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164</th>\n",
       "      <td>china pr</td>\n",
       "      <td>6.95</td>\n",
       "      <td>16624.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>165</th>\n",
       "      <td>slovakia</td>\n",
       "      <td>6.80</td>\n",
       "      <td>32895.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166</th>\n",
       "      <td>kazakhstan</td>\n",
       "      <td>6.40</td>\n",
       "      <td>26071.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>austria</td>\n",
       "      <td>6.35</td>\n",
       "      <td>49247.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>belarus</td>\n",
       "      <td>6.15</td>\n",
       "      <td>18616.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>lithuania</td>\n",
       "      <td>6.20</td>\n",
       "      <td>31935.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>georgia</td>\n",
       "      <td>5.80</td>\n",
       "      <td>10644.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>korea dpr</td>\n",
       "      <td>5.70</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>liechtenstein</td>\n",
       "      <td>5.65</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>latvia</td>\n",
       "      <td>5.60</td>\n",
       "      <td>27291.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>switzerland</td>\n",
       "      <td>5.50</td>\n",
       "      <td>61360.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>estonia</td>\n",
       "      <td>5.10</td>\n",
       "      <td>31473.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>176</th>\n",
       "      <td>sweden</td>\n",
       "      <td>2.10</td>\n",
       "      <td>51264.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>177</th>\n",
       "      <td>tajikistan</td>\n",
       "      <td>2.00</td>\n",
       "      <td>3131.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>iceland</td>\n",
       "      <td>1.75</td>\n",
       "      <td>52150.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>finland</td>\n",
       "      <td>1.70</td>\n",
       "      <td>44050.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>kyrgyz republic</td>\n",
       "      <td>1.55</td>\n",
       "      <td>3652.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>norway</td>\n",
       "      <td>1.50</td>\n",
       "      <td>70590.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>mongolia</td>\n",
       "      <td>-0.70</td>\n",
       "      <td>12551.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>russia</td>\n",
       "      <td>-5.10</td>\n",
       "      <td>27890.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>canada</td>\n",
       "      <td>-5.35</td>\n",
       "      <td>48141.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>macau</td>\n",
       "      <td>NaN</td>\n",
       "      <td>114430.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>186</th>\n",
       "      <td>hong kong</td>\n",
       "      <td>NaN</td>\n",
       "      <td>61016.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187</th>\n",
       "      <td>chinese taipei</td>\n",
       "      <td>NaN</td>\n",
       "      <td>49827.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188</th>\n",
       "      <td>puerto rico</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37895.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189</th>\n",
       "      <td>kosovo</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12003.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>190</th>\n",
       "      <td>south sudan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1503.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>191 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                              name   temp    gdp_pp\n",
       "0                     burkina faso  28.25    1884.0\n",
       "1                             mali  28.25    2169.0\n",
       "2                         djibouti  28.00    3567.0\n",
       "3                          senegal  27.85    2678.0\n",
       "4                       mauritania  27.65    4474.0\n",
       "5                         maldives  27.65   19178.0\n",
       "6                            benin  27.55    2219.0\n",
       "7                           gambia  27.50    1686.0\n",
       "8                            ghana  27.20    4605.0\n",
       "9                          bahrain  27.15   51846.0\n",
       "10                           niger  27.15    1153.0\n",
       "11                           qatar  27.15  124927.0\n",
       "12                      seychelles  27.15   28712.0\n",
       "13                            togo  27.15    1612.0\n",
       "14                         somalia  27.05       NaN\n",
       "15            united arab emirates  27.00   68245.0\n",
       "16                       sri lanka  26.95   13001.0\n",
       "17                           sudan  26.90    4580.0\n",
       "18               brunei darussalam  26.85   76743.0\n",
       "19                        cambodia  26.80    4010.0\n",
       "20                         nigeria  26.80    5927.0\n",
       "21   st vincent and the grenadines  26.80   11623.0\n",
       "22                   guinea-bissau  26.75    1806.0\n",
       "23                           samoa  26.70    5737.0\n",
       "24                         grenada  26.65   14779.0\n",
       "25                            chad  26.55    2433.0\n",
       "26                       singapore  26.45   90531.0\n",
       "27                   cÃ´te d'ivoire  26.35    3857.0\n",
       "28                        thailand  26.30   17786.0\n",
       "29                    sierra leone  26.05    1791.0\n",
       "..                             ...    ...       ...\n",
       "161                        denmark   7.50   49613.0\n",
       "162                         bhutan   7.40    8720.0\n",
       "163                        armenia   7.15    9098.0\n",
       "164                       china pr   6.95   16624.0\n",
       "165                       slovakia   6.80   32895.0\n",
       "166                     kazakhstan   6.40   26071.0\n",
       "167                        austria   6.35   49247.0\n",
       "168                        belarus   6.15   18616.0\n",
       "169                      lithuania   6.20   31935.0\n",
       "170                        georgia   5.80   10644.0\n",
       "171                      korea dpr   5.70       NaN\n",
       "172                  liechtenstein   5.65       NaN\n",
       "173                         latvia   5.60   27291.0\n",
       "174                    switzerland   5.50   61360.0\n",
       "175                        estonia   5.10   31473.0\n",
       "176                         sweden   2.10   51264.0\n",
       "177                     tajikistan   2.00    3131.0\n",
       "178                        iceland   1.75   52150.0\n",
       "179                        finland   1.70   44050.0\n",
       "180                kyrgyz republic   1.55    3652.0\n",
       "181                         norway   1.50   70590.0\n",
       "182                       mongolia  -0.70   12551.0\n",
       "183                         russia  -5.10   27890.0\n",
       "184                         canada  -5.35   48141.0\n",
       "185                          macau    NaN  114430.0\n",
       "186                      hong kong    NaN   61016.0\n",
       "187                 chinese taipei    NaN   49827.0\n",
       "188                    puerto rico    NaN   37895.0\n",
       "189                         kosovo    NaN   12003.0\n",
       "190                    south sudan    NaN    1503.0\n",
       "\n",
       "[191 rows x 3 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "def scrape_population():\n",
    "    url = \"https://en.wikipedia.org/wiki/List_of_countries_by_population_(United_Nations)\"\n",
    "    my_page = requests.get(url)\n",
    "    soup = BeautifulSoup(my_page.content, \"lxml\")\n",
    "    tables = soup.find_all('table',{'class':'wikitable'})\n",
    "    country_rows = tables[0].findAll('tr')\n",
    "\n",
    "    countries_popu = []\n",
    "\n",
    "    for country in country_rows[2:]:\n",
    "\n",
    "        country_data = country.findAll('td')\n",
    "\n",
    "        country_name_raw = country_data[1].text\n",
    "        country_name = country_name_raw.strip()\n",
    "        m = re.search('\\[\\w+\\]', country_name_raw)\n",
    "        if (m != None):\n",
    "            citation = m.group(0)\n",
    "            country_name = country_name.replace(citation, \"\")\n",
    "\n",
    "        population = int(country_data[5].text.strip().replace(',',''))\n",
    "\n",
    "#         if (country_name in worldcup_teams):\n",
    "        countries_popu.append({\"name\":country_name,'population':population})\n",
    "            \n",
    "    return pd.DataFrame(countries_popu)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "countries_popu = scrape_population()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cannot map rÃ©union\n",
      "Cannot map western sahara\n",
      "Cannot map guadeloupe\n",
      "Cannot map martinique\n",
      "Cannot map french polynesia\n",
      "Cannot map french guiana\n",
      "Cannot map mayotte\n",
      "Cannot map guernsey and Â jersey\n",
      "Cannot map kiribati\n",
      "Cannot map federated states of micronesia\n",
      "Cannot map isle of man\n",
      "Cannot map greenland\n",
      "Cannot map northern mariana islands\n",
      "Cannot map marshall islands\n",
      "Cannot map sint maarten\n",
      "Cannot map monaco\n",
      "Cannot map palau\n",
      "Cannot map wallis and futuna\n",
      "Cannot map nauru\n",
      "Cannot map tuvalu\n",
      "Cannot map saint pierre and miquelon\n",
      "Cannot map saint helena ascension and tristan da cunha\n",
      "Cannot map falkland islands\n",
      "Cannot map niue\n",
      "Cannot map tokelau\n",
      "Cannot map vatican city\n"
     ]
    }
   ],
   "source": [
    "countries_popu['name'] = countries_popu['name'].copy().apply(map_country)\n",
    "countries_popu = countries_popu[~countries_popu['name'].isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'kosovo'}"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "set(combined_df.name.unique()) - set(countries_popu.name.unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'american samoa',\n",
       " 'anguilla',\n",
       " 'aruba',\n",
       " 'bermuda',\n",
       " 'british virgin islands',\n",
       " 'cayman islands',\n",
       " 'cook islands',\n",
       " 'curaÃ§ao',\n",
       " 'faroe islands',\n",
       " 'gibraltar',\n",
       " 'guam',\n",
       " 'montserrat',\n",
       " 'new caledonia',\n",
       " 'palestine',\n",
       " 'turks and caicos islands',\n",
       " 'us virgin islands'}"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "set(countries_popu.name.unique()) - set(combined_df.name.unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "combined_df = combined_df.merge(countries_popu, on = 'name', how = 'outer')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>temp</th>\n",
       "      <th>gdp_pp</th>\n",
       "      <th>population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>burkina faso</td>\n",
       "      <td>28.25</td>\n",
       "      <td>1884.0</td>\n",
       "      <td>19193382.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>mali</td>\n",
       "      <td>28.25</td>\n",
       "      <td>2169.0</td>\n",
       "      <td>18541980.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>djibouti</td>\n",
       "      <td>28.00</td>\n",
       "      <td>3567.0</td>\n",
       "      <td>956985.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>senegal</td>\n",
       "      <td>27.85</td>\n",
       "      <td>2678.0</td>\n",
       "      <td>15850567.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>mauritania</td>\n",
       "      <td>27.65</td>\n",
       "      <td>4474.0</td>\n",
       "      <td>4420184.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>maldives</td>\n",
       "      <td>27.65</td>\n",
       "      <td>19178.0</td>\n",
       "      <td>436330.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>benin</td>\n",
       "      <td>27.55</td>\n",
       "      <td>2219.0</td>\n",
       "      <td>11175692.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>gambia</td>\n",
       "      <td>27.50</td>\n",
       "      <td>1686.0</td>\n",
       "      <td>2100568.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>ghana</td>\n",
       "      <td>27.20</td>\n",
       "      <td>4605.0</td>\n",
       "      <td>28833629.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>bahrain</td>\n",
       "      <td>27.15</td>\n",
       "      <td>51846.0</td>\n",
       "      <td>1492584.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>niger</td>\n",
       "      <td>27.15</td>\n",
       "      <td>1153.0</td>\n",
       "      <td>21477348.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>qatar</td>\n",
       "      <td>27.15</td>\n",
       "      <td>124927.0</td>\n",
       "      <td>2639211.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>seychelles</td>\n",
       "      <td>27.15</td>\n",
       "      <td>28712.0</td>\n",
       "      <td>94737.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>togo</td>\n",
       "      <td>27.15</td>\n",
       "      <td>1612.0</td>\n",
       "      <td>7797694.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>somalia</td>\n",
       "      <td>27.05</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14742523.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>united arab emirates</td>\n",
       "      <td>27.00</td>\n",
       "      <td>68245.0</td>\n",
       "      <td>9400145.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>sri lanka</td>\n",
       "      <td>26.95</td>\n",
       "      <td>13001.0</td>\n",
       "      <td>20876917.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>sudan</td>\n",
       "      <td>26.90</td>\n",
       "      <td>4580.0</td>\n",
       "      <td>40533330.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>brunei darussalam</td>\n",
       "      <td>26.85</td>\n",
       "      <td>76743.0</td>\n",
       "      <td>428697.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>cambodia</td>\n",
       "      <td>26.80</td>\n",
       "      <td>4010.0</td>\n",
       "      <td>16005373.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>nigeria</td>\n",
       "      <td>26.80</td>\n",
       "      <td>5927.0</td>\n",
       "      <td>190886311.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>st vincent and the grenadines</td>\n",
       "      <td>26.80</td>\n",
       "      <td>11623.0</td>\n",
       "      <td>109897.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>guinea-bissau</td>\n",
       "      <td>26.75</td>\n",
       "      <td>1806.0</td>\n",
       "      <td>1861283.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>samoa</td>\n",
       "      <td>26.70</td>\n",
       "      <td>5737.0</td>\n",
       "      <td>196440.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>grenada</td>\n",
       "      <td>26.65</td>\n",
       "      <td>14779.0</td>\n",
       "      <td>107825.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>chad</td>\n",
       "      <td>26.55</td>\n",
       "      <td>2433.0</td>\n",
       "      <td>14899994.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>singapore</td>\n",
       "      <td>26.45</td>\n",
       "      <td>90531.0</td>\n",
       "      <td>5708844.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>cÃ´te d'ivoire</td>\n",
       "      <td>26.35</td>\n",
       "      <td>3857.0</td>\n",
       "      <td>24294750.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>thailand</td>\n",
       "      <td>26.30</td>\n",
       "      <td>17786.0</td>\n",
       "      <td>69037513.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>sierra leone</td>\n",
       "      <td>26.05</td>\n",
       "      <td>1791.0</td>\n",
       "      <td>7557212.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>tajikistan</td>\n",
       "      <td>2.00</td>\n",
       "      <td>3131.0</td>\n",
       "      <td>8921343.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>iceland</td>\n",
       "      <td>1.75</td>\n",
       "      <td>52150.0</td>\n",
       "      <td>335025.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>finland</td>\n",
       "      <td>1.70</td>\n",
       "      <td>44050.0</td>\n",
       "      <td>5523231.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>kyrgyz republic</td>\n",
       "      <td>1.55</td>\n",
       "      <td>3652.0</td>\n",
       "      <td>6045117.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>norway</td>\n",
       "      <td>1.50</td>\n",
       "      <td>70590.0</td>\n",
       "      <td>5305383.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>mongolia</td>\n",
       "      <td>-0.70</td>\n",
       "      <td>12551.0</td>\n",
       "      <td>3075647.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>russia</td>\n",
       "      <td>-5.10</td>\n",
       "      <td>27890.0</td>\n",
       "      <td>143989754.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>canada</td>\n",
       "      <td>-5.35</td>\n",
       "      <td>48141.0</td>\n",
       "      <td>36624199.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>186</th>\n",
       "      <td>macau</td>\n",
       "      <td>NaN</td>\n",
       "      <td>114430.0</td>\n",
       "      <td>622567.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187</th>\n",
       "      <td>hong kong</td>\n",
       "      <td>NaN</td>\n",
       "      <td>61016.0</td>\n",
       "      <td>7364883.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188</th>\n",
       "      <td>chinese taipei</td>\n",
       "      <td>NaN</td>\n",
       "      <td>49827.0</td>\n",
       "      <td>23626456.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>189</th>\n",
       "      <td>puerto rico</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37895.0</td>\n",
       "      <td>3663131.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>190</th>\n",
       "      <td>kosovo</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12003.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>191</th>\n",
       "      <td>south sudan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1503.0</td>\n",
       "      <td>12575714.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>192</th>\n",
       "      <td>palestine</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4920724.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>193</th>\n",
       "      <td>new caledonia</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>276255.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>194</th>\n",
       "      <td>guam</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>164229.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>195</th>\n",
       "      <td>curaÃ§ao</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>160539.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>aruba</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>105264.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197</th>\n",
       "      <td>us virgin islands</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>104901.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>cayman islands</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>61559.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>199</th>\n",
       "      <td>bermuda</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>61349.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>200</th>\n",
       "      <td>american samoa</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>55641.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>201</th>\n",
       "      <td>faroe islands</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>49290.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>202</th>\n",
       "      <td>turks and caicos islands</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>35446.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>203</th>\n",
       "      <td>gibraltar</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>34571.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>204</th>\n",
       "      <td>british virgin islands</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>31196.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>205</th>\n",
       "      <td>cook islands</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17380.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>206</th>\n",
       "      <td>anguilla</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14909.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>207</th>\n",
       "      <td>montserrat</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5177.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>208 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                              name   temp    gdp_pp   population\n",
       "0                     burkina faso  28.25    1884.0   19193382.0\n",
       "1                             mali  28.25    2169.0   18541980.0\n",
       "2                         djibouti  28.00    3567.0     956985.0\n",
       "3                          senegal  27.85    2678.0   15850567.0\n",
       "4                       mauritania  27.65    4474.0    4420184.0\n",
       "5                         maldives  27.65   19178.0     436330.0\n",
       "6                            benin  27.55    2219.0   11175692.0\n",
       "7                           gambia  27.50    1686.0    2100568.0\n",
       "8                            ghana  27.20    4605.0   28833629.0\n",
       "9                          bahrain  27.15   51846.0    1492584.0\n",
       "10                           niger  27.15    1153.0   21477348.0\n",
       "11                           qatar  27.15  124927.0    2639211.0\n",
       "12                      seychelles  27.15   28712.0      94737.0\n",
       "13                            togo  27.15    1612.0    7797694.0\n",
       "14                         somalia  27.05       NaN   14742523.0\n",
       "15            united arab emirates  27.00   68245.0    9400145.0\n",
       "16                       sri lanka  26.95   13001.0   20876917.0\n",
       "17                           sudan  26.90    4580.0   40533330.0\n",
       "18               brunei darussalam  26.85   76743.0     428697.0\n",
       "19                        cambodia  26.80    4010.0   16005373.0\n",
       "20                         nigeria  26.80    5927.0  190886311.0\n",
       "21   st vincent and the grenadines  26.80   11623.0     109897.0\n",
       "22                   guinea-bissau  26.75    1806.0    1861283.0\n",
       "23                           samoa  26.70    5737.0     196440.0\n",
       "24                         grenada  26.65   14779.0     107825.0\n",
       "25                            chad  26.55    2433.0   14899994.0\n",
       "26                       singapore  26.45   90531.0    5708844.0\n",
       "27                   cÃ´te d'ivoire  26.35    3857.0   24294750.0\n",
       "28                        thailand  26.30   17786.0   69037513.0\n",
       "29                    sierra leone  26.05    1791.0    7557212.0\n",
       "..                             ...    ...       ...          ...\n",
       "178                     tajikistan   2.00    3131.0    8921343.0\n",
       "179                        iceland   1.75   52150.0     335025.0\n",
       "180                        finland   1.70   44050.0    5523231.0\n",
       "181                kyrgyz republic   1.55    3652.0    6045117.0\n",
       "182                         norway   1.50   70590.0    5305383.0\n",
       "183                       mongolia  -0.70   12551.0    3075647.0\n",
       "184                         russia  -5.10   27890.0  143989754.0\n",
       "185                         canada  -5.35   48141.0   36624199.0\n",
       "186                          macau    NaN  114430.0     622567.0\n",
       "187                      hong kong    NaN   61016.0    7364883.0\n",
       "188                 chinese taipei    NaN   49827.0   23626456.0\n",
       "189                    puerto rico    NaN   37895.0    3663131.0\n",
       "190                         kosovo    NaN   12003.0          NaN\n",
       "191                    south sudan    NaN    1503.0   12575714.0\n",
       "192                      palestine    NaN       NaN    4920724.0\n",
       "193                  new caledonia    NaN       NaN     276255.0\n",
       "194                           guam    NaN       NaN     164229.0\n",
       "195                        curaÃ§ao    NaN       NaN     160539.0\n",
       "196                          aruba    NaN       NaN     105264.0\n",
       "197              us virgin islands    NaN       NaN     104901.0\n",
       "198                 cayman islands    NaN       NaN      61559.0\n",
       "199                        bermuda    NaN       NaN      61349.0\n",
       "200                 american samoa    NaN       NaN      55641.0\n",
       "201                  faroe islands    NaN       NaN      49290.0\n",
       "202       turks and caicos islands    NaN       NaN      35446.0\n",
       "203                      gibraltar    NaN       NaN      34571.0\n",
       "204         british virgin islands    NaN       NaN      31196.0\n",
       "205                   cook islands    NaN       NaN      17380.0\n",
       "206                       anguilla    NaN       NaN      14909.0\n",
       "207                     montserrat    NaN       NaN       5177.0\n",
       "\n",
       "[208 rows x 4 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "combined_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "combined_df.to_csv('data/cleaned/country_demographics.csv', index = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "def get_countries_by_continent():    \n",
    "    url = \"https://simple.wikipedia.org/wiki/List_of_countries_by_continents\"\n",
    "    my_page = requests.get(url)\n",
    "    soup = BeautifulSoup(my_page.content, \"lxml\")\n",
    "    continents = soup.findAll('span',{'class':'mw-headline'})\n",
    "    continents = continents[:-2]\n",
    "    country_to_continent = {}\n",
    "    \n",
    "    for continent in continents:\n",
    "        raw_countries = continent.findNext('ul')\n",
    "        raw_countries = raw_countries.findAll('li')\n",
    "        for c in raw_countries:\n",
    "            country_name = c.text.split(\"-\")[0]\n",
    "            # remove secondary names\n",
    "            idx = country_name.find('(')\n",
    "            idx2 = country_name.find('[')\n",
    "            if idx != -1:\n",
    "                country_name = country_name[:idx]\n",
    "            if idx != -2:\n",
    "                country_name = country_name[:idx2].strip()\n",
    "            country_name = country_name.replace('*','')\n",
    "            country_to_continent[country_name] = continent.text\n",
    "    \n",
    "    return country_to_continent"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "country_to_continent = get_countries_by_continent()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "# country_to_continent"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
