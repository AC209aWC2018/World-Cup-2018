{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Summary and Future Work"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this project we explored the idea of predicting the 2018 World Cup through a data science approach. We collected data related to matches, team ratings, and FIFA rankings. We use as our training set the matches played by national teams starting from 2006. However, due to limitations of the team ratings dataset, we had to get rid of many matches when merging with the matches dataset with the team ratings dataset. The training set has three outcomes, home team loses, draw, and home team wins. Although the dataset designates one team as home team, in most cases this does not mean anything and one can switch home team and away team. As a result, any feature we use will have to be symmetric in nature. \n",
    "\n",
    "Due to the elimination style during playoffs of the World Cup, there are no draws in these playoff matches. We attempted different approaches to predicting the outcome of theese playoff matches. The first approach is to predict the outcome at 90 minutes (when a regular game ends so that our train set and test set are more \"similar\" to each other) before accounting for penalty kicks and overtime, allowing the model which trained on the training set to also predict draws in the playoff matches of the World Cup. In the second approach, we predicted the outcome at the end of the match; for a playoff match, if the model predicts a draw as most likely, then we instead predict the second most likely outcome of that match. The third approach also attempts to predict the outcome at the end of the match. Instead of just predicting the second most likely outcome for a playoff match, we instead just train another model specifically on past World Cup playoff matches on the final outcome of these matches; we then just use this model to predict the playoff matches while the model trained on the training set will predict the preliminaries match. \n",
    "\n",
    "We wanted to see just how reliable FIFA rankings are in determining the outcome of a match, so we built a baseline model consisting of just FIFA rankings, attack ratings, defense ratings, midfield ratings, and overall ratings of the teams. We tried out a variety of classification methods such as logistic regression, linear discriminant analysis, quadratic discriminant analysis, random forest, and XGBoost, using cross-validation to train on the models and ultimately selecting the model with the highest validation accuracy. With this model, we achieved decent predictions on the 2018 World Cup. Also, with the baseline model, we realized that FIFA rankings do not have that much of an impact on the outcome of the matches, indicating that a model without FIFA rankings can achieve better results than the baseline model if we feature engineer good features.\n",
    "\n",
    "Through reviewing past works and exploratory data analysis, we realized that features related to other aspects of the team not captured by the baseline model, such as the income, age, and more specific statistics of the players of the team than just one rating on attack, one rating on defense, etc. (such as dribbling skills, passing skills, etc.), or momentum in the past few games, matter. Furthermore, not surprisingly the wealth of the country matters as well, in which we compared the GDP of countries on the same continent, acting as a proxy for comparing GDP of teams in the same confederation.\n",
    "\n",
    "\n",
    "\n",
    "Similar to the baseline model, we first tried a variety of classification methods and use cross-validation to train them, selecting the model with the highest validation accuracy as the model of use. With this model, we achieved impressive increases to our test accuracies. We then tried stacking, but that did not result in anything significant. Due to the multicollineariy nature of our features, we utilized the dimension reduction techniques to conduct Princpal Component Regression and Partial Least Squares Discriminant Analysis. In the end we saw that Partial Least Squares Discriminant Analysis was comparable to the full model, and better in the case of the second approach. \n",
    "\n",
    "![Model Results](img/model_results.png)\n",
    "\n",
    "As shown, the models we built have already shown decent results, but of course there is always room for improvement. The immediate next step to take is to think of more complex features. We would also like to explore the impact of individual players on the match; while team ratings may capture an aggregate view of the players, we would like to be even more granular to see if individual players can \"carry\" their teams. We had attempted to do so during the beginning of this project, but one of the main constraints that we encountered was that it was basically impossible to match individual players on the national stage. We believe that this problem would become resolved as the field becomes more developed and centralized; eventually a website or database like https://www.baseball-reference.com/ will be built, but for soccer. In applying data science to any field, we believe that domain knowledge about the field is the most necessary requirement to improve the model. As such, another crucial next step would be acquire domain knowledge to recognize what makes a team \"good\" considering that none of us basically have any knowledge about soccer at all. \n",
    "\n",
    "This project proves that there is a lot of potential for the field to expand. There is no doubt in the future we will see teams rely heavily on analytics to make decision, just like how baseball, basketball and American football do in the current era. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
