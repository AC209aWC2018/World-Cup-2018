{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Milestone 3"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data Sources"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We were able to find a dataset on Kaggle that contains all FIFA international men teams' rankings from August 1993 to June 2018 (https://www.kaggle.com/tadhgfitzgerald/fifa-international-soccer-mens-ranking-1993now). This dataset will prove essential in building our baseline model using essentially only the FIFA rankings and basic summary statistics about the teams.\n",
    "\n",
    "We were able to find a dataset on Gitlab that contains the results of each match of the 2018 World Cup (https://gitlab.com/djh_or/2018-world-cup-stats/blob/master/world_cup_2018_stats.csv). This allows us to easily construct a test set.\n",
    "\n",
    "We also wrote two scrapers for Wikipedia. \n",
    "\n",
    "* One scraper scrapes the World Cup teams for each country (https://en.wikipedia.org/wiki/XXXX_FIFA_World_Cup_squads, where XXXX is the year)\n",
    "\n",
    "* The other scraper scrapes information about countries like GDP PPP (https://en.wikipedia.org/wiki/List_of_countries_by_GDP_(PPP)), population (https://en.wikipedia.org/wiki/List_of_countries_by_population_(United_Nations)), and average yearly temperature (https://en.wikipedia.org/wiki/List_of_countries_by_average_yearly_temperature).\n",
    "\n",
    "\n",
    "https://data.worldbank.org/indicator/NY.GDP.MKTP.PP.KD?name_desc=false\n",
    "https://data.worldbank.org/indicator/NY.GDP.PCAP.PP.KD\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data Cleaning"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "One of the largest issues we encountered after we collected all the data was that we realized that we will not be able to merge all the rows. There are two different underlying problems:\n",
    "\n",
    "\n",
    "### 1. Different Naming Convention for Countries\n",
    "\n",
    "Each dataset we collected had a different naming convention for the countries. In most cases, this was due to slight variation in spelling (i.e. St Lucia vs Saint Lucia). With all these different variations, we needed to map all the variations to just one name so that we could merge our datasets. We decided to use the official FIFA names of the countries found using the FIFA rankings dataset as the mapped names. Then, in order to tackle this problem, we decided to install the package `fuzzywuzzy` (https://github.com/seatgeek/fuzzywuzzy), which essentially calculates a similarity score using Levenshtein Distance between two strings. We wrote the method `map_country()` that essentially calculates the Levenshtein Distance for a country_name string if the country_name string does not exactly match with the FIFA names and map the string to the FIFA name with the highest similarity score (in percentage). We only do this mapping if the highest similarity score is above a 80%, when we are very confident that this is the right mapping. From manual inspection, this turned out extremely well and we believe that there should be no wrong mapping.\n",
    "\n",
    "However, in some cases, we still needed to do some manual mapping for ones in which the Levenshtein Distance is not confident about the mapping, such as in the case of the two Koreas, but the `map_country()` function has saved us from doing many manual mappings. \n",
    "\n",
    "\n",
    "### 2. Non-FIFA Affiliated Teams\n",
    "\n",
    "There were teams that were not national teams at all (i.e. United Koreans in Japan, which is a team for the Korean population in Japan). \n",
    "\n",
    "However, as mentioned before, in the end, we only care about the national teams that are affiliated with FIFA. As such, we only keep the rows where both teams appeared on the FIFA rankings starting from 2010 (All affiliated teams are ranked, and we only look after 2010 because some countries that were on older rankings no longer exist or changed names such as Zaire, which became Congo DR). Our method `map_country()` in `map_countries.py` easily takes care of this since in general there is no similarity score that is above 80% (except for a few edge cases such as Northern Cyprus, which is a different team than Cyprus and is not allowed to compete in FIFA).\n",
    "\n",
    "\n",
    "Since this was a decision we had to make, the final dataset might reflect some bias on our part, but we hope that this bias does not affect our model that much.\n",
    "\n",
    "All cleaned datasets can be found in the `data/cleaned` folder.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Feature Engineering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Exploratory Data Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Baseline Models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
