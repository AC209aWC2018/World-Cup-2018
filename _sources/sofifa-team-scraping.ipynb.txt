{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import requests\n",
    "import re\n",
    "import time\n",
    "from bs4 import BeautifulSoup, Comment\n",
    "from pathlib import Path\n",
    "from tqdm import tqdm\n",
    "%matplotlib inline\n",
    "\n",
    "plt.style.use('fivethirtyeight')\n",
    "sns.set_context('notebook')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Web Scraping"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "https://sofifa.com"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# referenced from https://realpython.com/python-web-scraping-practical-introduction/\n",
    "def simple_get(url):\n",
    "    \"\"\"\n",
    "    Attempts to scrape the content at 'url' by making a HTTP GET request. \n",
    "    If the content-type of the response is some kind of HTML/XML, return the\n",
    "    text content, otherwise return None.\n",
    "    \"\"\"\n",
    "    import requests\n",
    "    from contextlib import closing\n",
    "    \n",
    "    try:\n",
    "        with closing(requests.get(url, stream=True)) as resp:\n",
    "            if is_good_response(resp):\n",
    "                return resp.content\n",
    "            else:\n",
    "                return None\n",
    "    except AssertionError as error:\n",
    "        print(error)\n",
    "        print('Error in scraping of url')\n",
    "\n",
    "\n",
    "def is_good_response(resp):\n",
    "    \"\"\"\n",
    "    Returns True if response is some kind of HTML/XML\n",
    "    \"\"\"\n",
    "    content_type = resp.headers['Content-Type'].lower()\n",
    "    return (resp.status_code == 200\n",
    "           and content_type is not None\n",
    "           and content_type.find('html') > -1)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We note that the information on the website is categorized by FIFA update dates. For each FIFA update date, we have different national teams and national players with different statistics. We note that there does not seem to be a strict order to the update dates. Some months have several updates, while others have only 1 update. We have all the data starting from August 2006."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_date_href():\n",
    "    url = 'https://sofifa.com/'\n",
    "    html = BeautifulSoup(simple_get(url), 'html.parser')\n",
    "    \n",
    "    dates_href = {}\n",
    "    \n",
    "    # for each month\n",
    "    for m in html.find_all('div', attrs={'class': 'card-title h5'})[:-8]: # note the last 8 items are not dates\n",
    "        month = m.get_text()\n",
    "        \n",
    "        # for each day of the month\n",
    "        for d in m.find_next('div').find_all('a'):\n",
    "            day = d.get_text()\n",
    "            date = day+' '+month\n",
    "            href = d.get('href')\n",
    "            \n",
    "            dates_href[date] = href\n",
    "    \n",
    "    return dates_href"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "dates_href = get_date_href()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Find all the href attributes for each national team\n",
    "\n",
    "def get_nation_href(date_url):\n",
    "    \"\"\"Given a date url corresponding to a specific update of FIFA 18, returns a dictionary \n",
    "    containing the teams and their hrefs\"\"\"\n",
    "    url = 'https://sofifa.com/teams/national'+date_url   \n",
    "    html = BeautifulSoup(simple_get(url), 'html.parser')\n",
    "\n",
    "    teams_href = {}\n",
    "\n",
    "    for link in html.find_all('a', attrs={'href': re.compile(\"^/team/.+\")}):\n",
    "        if link.get_text() not in teams_href:\n",
    "            teams_href[link.get_text()] = link.get('href')\n",
    "            \n",
    "    return teams_href"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "49"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "teams_href = get_nation_href('?v=WC18&e=159126&set=true') # corresponds to FIFA WC18 Expansion Jun 16\n",
    "len(teams_href)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We note that at different dates, there may be different teams represented in the game. As such, we loop through all the possible dates to find the full list of all teams that have ever been represented in the game."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "full_teams_href = {}\n",
    "\n",
    "for d, dhref in dates_href.items():    \n",
    "    teams_href = get_nation_href(dhref)\n",
    "    # merges dictionaries\n",
    "    full_teams_href = {**teams_href, **full_teams_href}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "62"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(full_teams_href)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We now have the urls of all 62 national teams that has ever appeared in the game. We note that the current urls link to the most recent ratings of the teams. We can find the urls of all players in the national teams from this page as well. We now wish to collect team specific data for all these teams across all the different dates."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'25.35'"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "url_team = 'https://sofifa.com/team/1337/germany/'\n",
    "html_team = BeautifulSoup(simple_get(url_team), 'html.parser')\n",
    "html_team.find(string='Whole Team Average Age').next_element"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  0%|                                                                                          | 0/432 [00:00<?, ?it/s]\n",
      "  0%|▏                                                                              | 1/432 [01:27<10:27:22, 87.34s/it]\n",
      "  0%|▎                                                                              | 2/432 [02:54<10:25:28, 87.28s/it]\n",
      "  1%|▌                                                                              | 3/432 [04:24<10:29:02, 87.98s/it]\n",
      "  1%|▋                                                                              | 4/432 [05:52<10:29:12, 88.21s/it]\n",
      "  1%|▉                                                                              | 5/432 [07:16<10:18:46, 86.95s/it]\n",
      "  1%|█                                                                              | 6/432 [08:48<10:26:57, 88.30s/it]\n",
      "  2%|█▎                                                                             | 7/432 [10:22<10:38:08, 90.09s/it]\n",
      "  2%|█▍                                                                             | 8/432 [11:51<10:33:42, 89.67s/it]\n",
      "  2%|█▋                                                                             | 9/432 [13:18<10:28:05, 89.09s/it]\n",
      "  2%|█▊                                                                            | 10/432 [14:44<10:18:18, 87.91s/it]\n",
      "  3%|█▉                                                                            | 11/432 [16:11<10:15:35, 87.73s/it]\n",
      "  3%|██▏                                                                           | 12/432 [17:41<10:19:37, 88.52s/it]\n",
      "  3%|██▎                                                                           | 13/432 [19:09<10:15:58, 88.21s/it]\n",
      "  3%|██▌                                                                           | 14/432 [20:50<10:41:37, 92.10s/it]\n",
      "  3%|██▋                                                                           | 15/432 [22:10<10:14:26, 88.41s/it]\n",
      "  4%|██▉                                                                           | 16/432 [23:56<10:49:47, 93.72s/it]\n",
      "  4%|███                                                                           | 17/432 [25:08<10:02:35, 87.12s/it]\n",
      "  4%|███▎                                                                           | 18/432 [26:22<9:33:59, 83.19s/it]\n",
      "  4%|███▍                                                                           | 19/432 [27:40<9:23:24, 81.85s/it]\n",
      "  5%|███▋                                                                           | 20/432 [29:11<9:39:19, 84.37s/it]\n",
      "  5%|███▊                                                                           | 21/432 [30:37<9:42:26, 85.03s/it]\n",
      "  5%|████                                                                           | 22/432 [31:53<9:21:29, 82.17s/it]\n",
      "  5%|████▏                                                                          | 23/432 [32:59<8:46:49, 77.29s/it]\n",
      "  6%|████▍                                                                          | 24/432 [34:05<8:23:30, 74.04s/it]\n",
      "  6%|████▌                                                                          | 25/432 [35:17<8:19:00, 73.56s/it]\n",
      "  6%|████▊                                                                          | 26/432 [36:24<8:02:36, 71.32s/it]\n",
      "  6%|████▉                                                                          | 27/432 [37:32<7:55:35, 70.46s/it]\n",
      "  6%|█████                                                                          | 28/432 [38:41<7:51:06, 69.97s/it]\n",
      "  7%|█████▎                                                                         | 29/432 [39:48<7:44:55, 69.22s/it]\n",
      "  7%|█████▍                                                                         | 30/432 [41:04<7:56:06, 71.06s/it]\n",
      "  7%|█████▋                                                                         | 31/432 [42:19<8:02:47, 72.24s/it]\n",
      "  7%|█████▊                                                                         | 32/432 [43:24<7:48:28, 70.27s/it]\n",
      "  8%|██████                                                                         | 33/432 [44:34<7:46:04, 70.09s/it]\n",
      "  8%|██████▏                                                                        | 34/432 [45:49<7:55:40, 71.71s/it]\n",
      "  8%|██████▍                                                                        | 35/432 [47:04<7:59:18, 72.44s/it]\n",
      "  8%|██████▌                                                                        | 36/432 [48:06<7:38:58, 69.54s/it]\n",
      "  9%|██████▊                                                                        | 37/432 [49:16<7:38:09, 69.59s/it]\n",
      "  9%|██████▉                                                                        | 38/432 [50:37<7:58:50, 72.92s/it]\n",
      "  9%|███████▏                                                                       | 39/432 [51:47<7:52:05, 72.08s/it]\n",
      "  9%|███████▎                                                                       | 40/432 [53:12<8:15:54, 75.90s/it]\n",
      "  9%|███████▍                                                                       | 41/432 [54:30<8:18:35, 76.51s/it]\n",
      " 10%|███████▋                                                                       | 42/432 [55:37<7:59:44, 73.81s/it]\n",
      " 10%|███████▊                                                                       | 43/432 [56:48<7:52:57, 72.95s/it]\n",
      " 10%|████████                                                                       | 44/432 [57:58<7:45:33, 71.99s/it]\n",
      " 10%|████████▏                                                                      | 45/432 [59:11<7:46:36, 72.34s/it]\n",
      " 11%|████████▏                                                                    | 46/432 [1:00:28<7:53:27, 73.59s/it]\n",
      " 11%|████████▍                                                                    | 47/432 [1:01:36<7:42:12, 72.03s/it]\n",
      " 11%|████████▌                                                                    | 48/432 [1:02:44<7:32:46, 70.75s/it]\n",
      " 11%|████████▋                                                                    | 49/432 [1:03:47<7:16:58, 68.46s/it]\n",
      " 12%|████████▉                                                                    | 50/432 [1:04:55<7:15:57, 68.48s/it]\n",
      " 12%|█████████                                                                    | 51/432 [1:06:08<7:23:18, 69.81s/it]\n",
      " 12%|█████████▎                                                                   | 52/432 [1:07:11<7:08:50, 67.71s/it]\n",
      " 12%|█████████▍                                                                   | 53/432 [1:08:21<7:11:20, 68.29s/it]\n",
      " 12%|█████████▋                                                                   | 54/432 [1:09:29<7:09:59, 68.25s/it]\n",
      " 13%|█████████▊                                                                   | 55/432 [1:10:36<7:07:15, 68.00s/it]\n",
      " 13%|█████████▉                                                                   | 56/432 [1:11:55<7:25:38, 71.11s/it]\n",
      " 13%|██████████▏                                                                  | 57/432 [1:13:07<7:27:08, 71.54s/it]\n",
      " 13%|██████████▎                                                                  | 58/432 [1:14:17<7:22:07, 70.93s/it]\n",
      " 14%|██████████▌                                                                  | 59/432 [1:15:25<7:16:04, 70.15s/it]\n",
      " 14%|██████████▋                                                                  | 60/432 [1:16:32<7:09:46, 69.32s/it]\n",
      " 14%|██████████▊                                                                  | 61/432 [1:17:39<7:03:03, 68.42s/it]\n",
      " 14%|███████████                                                                  | 62/432 [1:18:53<7:13:04, 70.23s/it]\n",
      " 15%|███████████▏                                                                 | 63/432 [1:20:24<7:48:59, 76.26s/it]\n",
      " 15%|███████████▍                                                                 | 64/432 [1:21:47<8:01:38, 78.53s/it]\n",
      " 15%|███████████▌                                                                 | 65/432 [1:22:58<7:45:30, 76.11s/it]\n",
      " 15%|███████████▊                                                                 | 66/432 [1:24:21<7:56:33, 78.13s/it]\n",
      " 16%|███████████▉                                                                 | 67/432 [1:25:41<8:00:04, 78.92s/it]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 16%|████████████                                                                 | 68/432 [1:26:48<7:36:31, 75.25s/it]\n",
      " 16%|████████████▎                                                                | 69/432 [1:27:57<7:24:34, 73.48s/it]\n",
      " 16%|████████████▍                                                                | 70/432 [1:29:03<7:09:42, 71.22s/it]\n",
      " 16%|████████████▋                                                                | 71/432 [1:30:12<7:04:18, 70.52s/it]\n",
      " 17%|████████████▊                                                                | 72/432 [1:31:19<6:56:42, 69.45s/it]\n",
      " 17%|█████████████                                                                | 73/432 [1:32:25<6:49:19, 68.41s/it]\n",
      " 17%|█████████████▏                                                               | 74/432 [1:33:43<7:04:40, 71.17s/it]\n",
      " 17%|█████████████▎                                                               | 75/432 [1:34:57<7:08:47, 72.07s/it]\n",
      " 18%|█████████████▌                                                               | 76/432 [1:36:14<7:16:18, 73.54s/it]\n",
      " 18%|█████████████▋                                                               | 77/432 [1:37:34<7:26:15, 75.42s/it]\n",
      " 18%|█████████████▉                                                               | 78/432 [1:38:53<7:31:43, 76.56s/it]\n",
      " 18%|██████████████                                                               | 79/432 [1:40:03<7:18:28, 74.53s/it]\n",
      " 19%|██████████████▎                                                              | 80/432 [1:41:21<7:24:10, 75.71s/it]\n",
      " 19%|██████████████▍                                                              | 81/432 [1:42:29<7:09:27, 73.41s/it]\n",
      " 19%|██████████████▌                                                              | 82/432 [1:43:38<6:59:17, 71.88s/it]\n",
      " 19%|██████████████▊                                                              | 83/432 [1:44:47<6:54:07, 71.20s/it]\n",
      " 19%|██████████████▉                                                              | 84/432 [1:45:57<6:49:55, 70.68s/it]\n",
      " 20%|███████████████▏                                                             | 85/432 [1:47:10<6:53:34, 71.51s/it]\n",
      " 20%|███████████████▎                                                             | 86/432 [1:48:35<7:14:51, 75.41s/it]\n",
      " 20%|███████████████▌                                                             | 87/432 [1:49:55<7:22:58, 77.04s/it]\n",
      " 20%|███████████████▋                                                             | 88/432 [1:51:05<7:09:29, 74.91s/it]\n",
      " 21%|███████████████▊                                                             | 89/432 [1:52:15<6:59:41, 73.42s/it]\n",
      " 21%|████████████████                                                             | 90/432 [1:53:28<6:58:00, 73.34s/it]\n",
      " 21%|████████████████▏                                                            | 91/432 [1:54:41<6:55:14, 73.06s/it]\n",
      " 21%|████████████████▍                                                            | 92/432 [1:55:59<7:02:12, 74.51s/it]\n",
      " 22%|████████████████▌                                                            | 93/432 [1:57:11<6:56:16, 73.68s/it]\n",
      " 22%|████████████████▊                                                            | 94/432 [1:58:22<6:51:31, 73.05s/it]\n",
      " 22%|████████████████▉                                                            | 95/432 [1:59:39<6:56:12, 74.10s/it]\n",
      " 22%|█████████████████                                                            | 96/432 [2:00:51<6:52:43, 73.70s/it]\n",
      " 22%|█████████████████▎                                                           | 97/432 [2:02:03<6:48:18, 73.13s/it]\n",
      " 23%|█████████████████▍                                                           | 98/432 [2:03:19<6:51:02, 73.84s/it]\n",
      " 23%|█████████████████▋                                                           | 99/432 [2:04:38<6:59:10, 75.53s/it]\n",
      " 23%|█████████████████▌                                                          | 100/432 [2:05:49<6:49:34, 74.02s/it]\n",
      " 23%|█████████████████▊                                                          | 101/432 [2:07:00<6:43:03, 73.06s/it]\n",
      " 24%|█████████████████▉                                                          | 102/432 [2:08:08<6:33:44, 71.59s/it]\n",
      " 24%|██████████████████                                                          | 103/432 [2:09:25<6:41:36, 73.24s/it]\n",
      " 24%|██████████████████▎                                                         | 104/432 [2:10:42<6:46:33, 74.37s/it]\n",
      " 24%|██████████████████▍                                                         | 105/432 [2:12:00<6:52:16, 75.65s/it]\n",
      " 25%|██████████████████▋                                                         | 106/432 [2:13:16<6:50:30, 75.55s/it]\n",
      " 25%|██████████████████▊                                                         | 107/432 [2:14:30<6:46:55, 75.13s/it]\n",
      " 25%|███████████████████                                                         | 108/432 [2:15:42<6:40:35, 74.18s/it]\n",
      " 25%|███████████████████▏                                                        | 109/432 [2:16:48<6:25:43, 71.65s/it]\n",
      " 25%|███████████████████▎                                                        | 110/432 [2:17:53<6:14:52, 69.85s/it]\n",
      " 26%|███████████████████▌                                                        | 111/432 [2:19:02<6:11:54, 69.52s/it]\n",
      " 26%|███████████████████▋                                                        | 112/432 [2:20:22<6:27:12, 72.60s/it]\n",
      " 26%|███████████████████▉                                                        | 113/432 [2:21:31<6:20:30, 71.57s/it]\n",
      " 26%|████████████████████                                                        | 114/432 [2:22:38<6:11:47, 70.15s/it]\n",
      " 27%|████████████████████▏                                                       | 115/432 [2:23:44<6:04:22, 68.97s/it]\n",
      " 27%|████████████████████▍                                                       | 116/432 [2:24:48<5:55:19, 67.47s/it]\n",
      " 27%|████████████████████▌                                                       | 117/432 [2:25:54<5:51:37, 66.98s/it]\n",
      " 27%|████████████████████▊                                                       | 118/432 [2:27:05<5:57:01, 68.22s/it]\n",
      " 28%|████████████████████▉                                                       | 119/432 [2:28:13<5:55:16, 68.10s/it]\n",
      " 28%|█████████████████████                                                       | 120/432 [2:29:19<5:51:10, 67.53s/it]\n",
      " 28%|█████████████████████▎                                                      | 121/432 [2:30:20<5:39:24, 65.48s/it]\n",
      " 28%|█████████████████████▍                                                      | 122/432 [2:31:23<5:34:25, 64.73s/it]\n",
      " 28%|█████████████████████▋                                                      | 123/432 [2:32:25<5:29:00, 63.88s/it]\n",
      " 29%|█████████████████████▊                                                      | 124/432 [2:33:27<5:25:08, 63.34s/it]\n",
      " 29%|█████████████████████▉                                                      | 125/432 [2:34:30<5:24:38, 63.45s/it]\n",
      " 29%|██████████████████████▏                                                     | 126/432 [2:35:34<5:24:22, 63.60s/it]\n",
      " 29%|██████████████████████▎                                                     | 127/432 [2:36:33<5:16:00, 62.17s/it]\n",
      " 30%|██████████████████████▌                                                     | 128/432 [2:37:48<5:33:40, 65.86s/it]\n",
      " 30%|██████████████████████▋                                                     | 129/432 [2:38:55<5:35:22, 66.41s/it]\n",
      " 30%|██████████████████████▊                                                     | 130/432 [2:40:09<5:45:33, 68.65s/it]\n",
      " 30%|███████████████████████                                                     | 131/432 [2:41:12<5:35:48, 66.94s/it]\n",
      " 31%|███████████████████████▏                                                    | 132/432 [2:42:17<5:32:20, 66.47s/it]\n",
      " 31%|███████████████████████▍                                                    | 133/432 [2:43:31<5:42:08, 68.66s/it]\n",
      " 31%|███████████████████████▌                                                    | 134/432 [2:45:04<6:17:02, 75.91s/it]\n",
      " 31%|███████████████████████▊                                                    | 135/432 [2:46:49<6:59:35, 84.77s/it]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 31%|███████████████████████▉                                                    | 136/432 [2:48:08<6:48:34, 82.82s/it]\n",
      " 32%|████████████████████████                                                    | 137/432 [2:49:19<6:30:13, 79.37s/it]\n",
      " 32%|████████████████████████▎                                                   | 138/432 [2:50:44<6:37:09, 81.05s/it]\n",
      " 32%|████████████████████████▍                                                   | 139/432 [2:52:06<6:37:09, 81.33s/it]\n",
      " 32%|████████████████████████▋                                                   | 140/432 [2:53:14<6:16:03, 77.27s/it]\n",
      " 33%|████████████████████████▊                                                   | 141/432 [2:54:19<5:56:29, 73.50s/it]\n",
      " 33%|████████████████████████▉                                                   | 142/432 [2:55:32<5:55:48, 73.62s/it]\n",
      " 33%|█████████████████████████▏                                                  | 143/432 [2:56:40<5:46:26, 71.92s/it]\n",
      " 33%|█████████████████████████▎                                                  | 144/432 [2:57:47<5:37:02, 70.22s/it]\n",
      " 34%|█████████████████████████▌                                                  | 145/432 [2:59:04<5:45:56, 72.32s/it]\n",
      " 34%|█████████████████████████▋                                                  | 146/432 [3:00:38<6:16:31, 78.99s/it]\n",
      " 34%|█████████████████████████▊                                                  | 147/432 [3:02:01<6:19:51, 79.97s/it]\n",
      " 34%|██████████████████████████                                                  | 148/432 [3:03:27<6:27:33, 81.88s/it]\n",
      " 34%|██████████████████████████▏                                                 | 149/432 [3:04:45<6:20:15, 80.62s/it]\n",
      " 35%|██████████████████████████▍                                                 | 150/432 [3:06:07<6:21:12, 81.11s/it]\n",
      " 35%|██████████████████████████▌                                                 | 151/432 [3:07:19<6:07:48, 78.54s/it]\n",
      " 35%|██████████████████████████▋                                                 | 152/432 [3:08:36<6:03:23, 77.87s/it]\n",
      " 35%|██████████████████████████▉                                                 | 153/432 [3:09:58<6:07:28, 79.03s/it]\n",
      " 36%|███████████████████████████                                                 | 154/432 [3:11:13<6:00:35, 77.83s/it]\n",
      " 36%|███████████████████████████▎                                                | 155/432 [3:12:28<5:56:08, 77.14s/it]\n",
      " 36%|███████████████████████████▍                                                | 156/432 [3:13:47<5:57:57, 77.82s/it]\n",
      " 36%|███████████████████████████▌                                                | 157/432 [3:14:52<5:38:33, 73.87s/it]\n",
      " 37%|███████████████████████████▊                                                | 158/432 [3:16:04<5:34:35, 73.27s/it]\n",
      " 37%|███████████████████████████▉                                                | 159/432 [3:17:18<5:34:02, 73.42s/it]\n",
      " 37%|████████████████████████████▏                                               | 160/432 [3:18:32<5:33:58, 73.67s/it]\n",
      " 37%|████████████████████████████▎                                               | 161/432 [3:19:49<5:37:45, 74.78s/it]\n",
      " 38%|████████████████████████████▌                                               | 162/432 [3:21:20<5:57:19, 79.41s/it]\n",
      " 38%|████████████████████████████▋                                               | 163/432 [3:22:37<5:53:37, 78.87s/it]\n",
      " 38%|████████████████████████████▊                                               | 164/432 [3:23:48<5:40:46, 76.29s/it]\n",
      " 38%|█████████████████████████████                                               | 165/432 [3:24:54<5:26:41, 73.41s/it]\n",
      " 38%|█████████████████████████████▏                                              | 166/432 [3:26:01<5:16:47, 71.46s/it]\n",
      " 39%|█████████████████████████████▍                                              | 167/432 [3:27:06<5:06:18, 69.35s/it]\n",
      " 39%|█████████████████████████████▌                                              | 168/432 [3:28:16<5:06:52, 69.74s/it]\n",
      " 39%|█████████████████████████████▋                                              | 169/432 [3:29:20<4:57:29, 67.87s/it]\n",
      " 39%|█████████████████████████████▉                                              | 170/432 [3:30:31<5:01:07, 68.96s/it]\n",
      " 40%|██████████████████████████████                                              | 171/432 [3:31:38<4:56:51, 68.24s/it]\n",
      " 40%|██████████████████████████████▎                                             | 172/432 [3:32:49<4:59:04, 69.02s/it]\n",
      " 40%|██████████████████████████████▍                                             | 173/432 [3:34:14<5:18:43, 73.83s/it]\n",
      " 40%|██████████████████████████████▌                                             | 174/432 [3:35:48<5:43:26, 79.87s/it]\n",
      " 41%|██████████████████████████████▊                                             | 175/432 [3:37:22<6:01:08, 84.32s/it]\n",
      " 41%|██████████████████████████████▉                                             | 176/432 [3:38:34<5:43:09, 80.43s/it]\n",
      " 41%|███████████████████████████████▏                                            | 177/432 [3:39:44<5:29:12, 77.46s/it]\n",
      " 41%|███████████████████████████████▎                                            | 178/432 [3:40:56<5:20:26, 75.70s/it]\n",
      " 41%|███████████████████████████████▍                                            | 179/432 [3:42:07<5:13:58, 74.46s/it]\n",
      " 42%|███████████████████████████████▋                                            | 180/432 [3:43:25<5:16:48, 75.43s/it]\n",
      " 42%|███████████████████████████████▊                                            | 181/432 [3:44:34<5:07:18, 73.46s/it]\n",
      " 42%|████████████████████████████████                                            | 182/432 [3:45:38<4:54:09, 70.60s/it]\n",
      " 42%|████████████████████████████████▏                                           | 183/432 [3:46:41<4:43:51, 68.40s/it]\n",
      " 43%|████████████████████████████████▎                                           | 184/432 [3:47:45<4:37:41, 67.18s/it]\n",
      " 43%|████████████████████████████████▌                                           | 185/432 [3:48:55<4:39:32, 67.90s/it]\n",
      " 43%|████████████████████████████████▋                                           | 186/432 [3:50:04<4:39:16, 68.12s/it]\n",
      " 43%|████████████████████████████████▉                                           | 187/432 [3:51:15<4:42:34, 69.20s/it]\n",
      " 44%|█████████████████████████████████                                           | 188/432 [3:52:24<4:40:45, 69.04s/it]\n",
      " 44%|█████████████████████████████████▎                                          | 189/432 [3:53:34<4:40:34, 69.28s/it]\n",
      " 44%|█████████████████████████████████▍                                          | 190/432 [3:54:54<4:52:03, 72.41s/it]\n",
      " 44%|█████████████████████████████████▌                                          | 191/432 [3:56:11<4:56:27, 73.81s/it]\n",
      " 44%|█████████████████████████████████▊                                          | 192/432 [3:57:56<5:33:34, 83.39s/it]\n",
      " 45%|█████████████████████████████████▉                                          | 193/432 [3:59:49<6:07:06, 92.16s/it]\n",
      " 45%|██████████████████████████████████▏                                         | 194/432 [4:01:06<5:47:24, 87.58s/it]\n",
      " 45%|██████████████████████████████████▎                                         | 195/432 [4:02:24<5:34:54, 84.79s/it]\n",
      " 45%|██████████████████████████████████▍                                         | 196/432 [4:03:37<5:19:51, 81.32s/it]\n",
      " 46%|██████████████████████████████████▋                                         | 197/432 [4:04:51<5:09:17, 78.97s/it]\n",
      " 46%|██████████████████████████████████▊                                         | 198/432 [4:06:10<5:07:59, 78.97s/it]\n",
      " 46%|███████████████████████████████████                                         | 199/432 [4:07:25<5:01:40, 77.68s/it]\n",
      " 46%|███████████████████████████████████▏                                        | 200/432 [4:08:34<4:50:26, 75.12s/it]\n",
      " 47%|███████████████████████████████████▎                                        | 201/432 [4:09:50<4:50:16, 75.40s/it]\n",
      " 47%|███████████████████████████████████▌                                        | 202/432 [4:11:03<4:46:27, 74.73s/it]\n",
      " 47%|███████████████████████████████████▋                                        | 203/432 [4:12:22<4:49:56, 75.97s/it]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 47%|███████████████████████████████████▉                                        | 204/432 [4:13:37<4:47:31, 75.67s/it]\n",
      " 47%|████████████████████████████████████                                        | 205/432 [4:14:49<4:42:17, 74.61s/it]\n",
      " 48%|████████████████████████████████████▏                                       | 206/432 [4:16:04<4:42:08, 74.90s/it]\n",
      " 48%|████████████████████████████████████▍                                       | 207/432 [4:17:18<4:39:05, 74.42s/it]\n",
      " 48%|████████████████████████████████████▌                                       | 208/432 [4:18:31<4:36:18, 74.01s/it]\n",
      " 48%|████████████████████████████████████▊                                       | 209/432 [4:19:44<4:33:55, 73.70s/it]\n",
      " 49%|████████████████████████████████████▉                                       | 210/432 [4:21:05<4:40:36, 75.84s/it]\n",
      " 49%|█████████████████████████████████████                                       | 211/432 [4:22:08<4:25:32, 72.09s/it]\n",
      " 49%|█████████████████████████████████████▎                                      | 212/432 [4:23:18<4:22:34, 71.61s/it]\n",
      " 49%|█████████████████████████████████████▍                                      | 213/432 [4:24:24<4:15:06, 69.89s/it]\n",
      " 50%|█████████████████████████████████████▋                                      | 214/432 [4:25:29<4:08:17, 68.34s/it]\n",
      " 50%|█████████████████████████████████████▊                                      | 215/432 [4:26:36<4:05:16, 67.82s/it]\n",
      " 50%|██████████████████████████████████████                                      | 216/432 [4:27:45<4:05:39, 68.24s/it]\n",
      " 50%|██████████████████████████████████████▏                                     | 217/432 [4:28:51<4:01:55, 67.51s/it]\n",
      " 50%|██████████████████████████████████████▎                                     | 218/432 [4:30:10<4:13:40, 71.13s/it]\n",
      " 51%|██████████████████████████████████████▌                                     | 219/432 [4:31:17<4:08:06, 69.89s/it]\n",
      " 51%|██████████████████████████████████████▋                                     | 220/432 [4:32:26<4:06:13, 69.69s/it]\n",
      " 51%|██████████████████████████████████████▉                                     | 221/432 [4:33:36<4:05:13, 69.73s/it]\n",
      " 51%|███████████████████████████████████████                                     | 222/432 [4:34:56<4:14:46, 72.79s/it]\n",
      " 52%|███████████████████████████████████████▏                                    | 223/432 [4:36:04<4:08:41, 71.39s/it]\n",
      " 52%|███████████████████████████████████████▍                                    | 224/432 [4:37:03<3:53:56, 67.48s/it]\n",
      " 52%|███████████████████████████████████████▌                                    | 225/432 [4:38:01<3:43:39, 64.83s/it]\n",
      " 52%|███████████████████████████████████████▊                                    | 226/432 [4:39:09<3:45:23, 65.65s/it]\n",
      " 53%|███████████████████████████████████████▉                                    | 227/432 [4:40:17<3:46:27, 66.28s/it]\n",
      " 53%|████████████████████████████████████████                                    | 228/432 [4:41:11<3:33:24, 62.77s/it]\n",
      " 53%|████████████████████████████████████████▎                                   | 229/432 [4:42:08<3:26:29, 61.03s/it]\n",
      " 53%|████████████████████████████████████████▍                                   | 230/432 [4:43:06<3:22:07, 60.04s/it]\n",
      " 53%|████████████████████████████████████████▋                                   | 231/432 [4:44:04<3:18:42, 59.32s/it]\n",
      " 54%|████████████████████████████████████████▊                                   | 232/432 [4:45:03<3:17:37, 59.29s/it]\n",
      " 54%|████████████████████████████████████████▉                                   | 233/432 [4:46:05<3:19:34, 60.17s/it]\n",
      " 54%|█████████████████████████████████████████▏                                  | 234/432 [4:47:04<3:17:40, 59.90s/it]\n",
      " 54%|█████████████████████████████████████████▎                                  | 235/432 [4:48:06<3:18:00, 60.31s/it]\n",
      " 55%|█████████████████████████████████████████▌                                  | 236/432 [4:49:09<3:19:44, 61.15s/it]\n",
      " 55%|█████████████████████████████████████████▋                                  | 237/432 [4:50:13<3:21:50, 62.11s/it]\n",
      " 55%|█████████████████████████████████████████▊                                  | 238/432 [4:51:15<3:20:36, 62.04s/it]\n",
      " 55%|██████████████████████████████████████████                                  | 239/432 [4:52:28<3:29:55, 65.26s/it]\n",
      " 56%|██████████████████████████████████████████▏                                 | 240/432 [4:53:42<3:37:41, 68.03s/it]\n",
      " 56%|██████████████████████████████████████████▍                                 | 241/432 [4:54:52<3:38:22, 68.60s/it]\n",
      " 56%|██████████████████████████████████████████▌                                 | 242/432 [4:55:50<3:27:22, 65.49s/it]\n",
      " 56%|██████████████████████████████████████████▊                                 | 243/432 [4:56:50<3:20:56, 63.79s/it]\n",
      " 56%|██████████████████████████████████████████▉                                 | 244/432 [4:57:53<3:19:00, 63.51s/it]\n",
      " 57%|███████████████████████████████████████████                                 | 245/432 [4:58:51<3:12:21, 61.72s/it]\n",
      " 57%|███████████████████████████████████████████▎                                | 246/432 [4:59:49<3:08:32, 60.82s/it]\n",
      " 57%|███████████████████████████████████████████▍                                | 247/432 [5:00:47<3:04:58, 59.99s/it]\n",
      " 57%|███████████████████████████████████████████▋                                | 248/432 [5:01:47<3:03:14, 59.75s/it]\n",
      " 58%|███████████████████████████████████████████▊                                | 249/432 [5:02:54<3:09:45, 62.22s/it]\n",
      " 58%|███████████████████████████████████████████▉                                | 250/432 [5:03:56<3:08:09, 62.03s/it]\n",
      " 58%|████████████████████████████████████████████▏                               | 251/432 [5:04:57<3:06:32, 61.84s/it]\n",
      " 58%|████████████████████████████████████████████▎                               | 252/432 [5:06:00<3:06:20, 62.11s/it]\n",
      " 59%|████████████████████████████████████████████▌                               | 253/432 [5:06:58<3:01:34, 60.86s/it]\n",
      " 59%|████████████████████████████████████████████▋                               | 254/432 [5:08:02<3:03:36, 61.89s/it]\n",
      " 59%|████████████████████████████████████████████▊                               | 255/432 [5:08:59<2:57:52, 60.30s/it]\n",
      " 59%|█████████████████████████████████████████████                               | 256/432 [5:10:04<3:00:56, 61.68s/it]\n",
      " 59%|█████████████████████████████████████████████▏                              | 257/432 [5:11:01<2:56:11, 60.41s/it]\n",
      " 60%|█████████████████████████████████████████████▍                              | 258/432 [5:12:05<2:58:05, 61.41s/it]\n",
      " 60%|█████████████████████████████████████████████▌                              | 259/432 [5:13:09<2:59:02, 62.09s/it]\n",
      " 60%|█████████████████████████████████████████████▋                              | 260/432 [5:14:12<2:59:04, 62.47s/it]\n",
      " 60%|█████████████████████████████████████████████▉                              | 261/432 [5:15:20<3:02:23, 64.00s/it]\n",
      " 61%|██████████████████████████████████████████████                              | 262/432 [5:16:26<3:03:32, 64.78s/it]\n",
      " 61%|██████████████████████████████████████████████▎                             | 263/432 [5:17:25<2:57:37, 63.06s/it]\n",
      " 61%|██████████████████████████████████████████████▍                             | 264/432 [5:18:30<2:57:35, 63.43s/it]\n",
      " 61%|██████████████████████████████████████████████▌                             | 265/432 [5:19:41<3:03:11, 65.82s/it]\n",
      " 62%|██████████████████████████████████████████████▊                             | 266/432 [5:20:48<3:02:39, 66.02s/it]\n",
      " 62%|██████████████████████████████████████████████▉                             | 267/432 [5:21:49<2:57:30, 64.55s/it]\n",
      " 62%|███████████████████████████████████████████████▏                            | 268/432 [5:22:54<2:57:23, 64.90s/it]\n",
      " 62%|███████████████████████████████████████████████▎                            | 269/432 [5:23:58<2:54:57, 64.40s/it]\n",
      " 62%|███████████████████████████████████████████████▌                            | 270/432 [5:25:04<2:55:12, 64.89s/it]\n",
      " 63%|███████████████████████████████████████████████▋                            | 271/432 [5:26:12<2:56:54, 65.93s/it]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 63%|███████████████████████████████████████████████▊                            | 272/432 [5:27:21<2:57:59, 66.75s/it]\n",
      " 63%|████████████████████████████████████████████████                            | 273/432 [5:28:42<3:08:39, 71.19s/it]\n",
      " 63%|████████████████████████████████████████████████▏                           | 274/432 [5:29:57<3:10:13, 72.24s/it]\n",
      " 64%|████████████████████████████████████████████████▍                           | 275/432 [5:31:11<3:10:28, 72.79s/it]\n",
      " 64%|████████████████████████████████████████████████▌                           | 276/432 [5:32:55<3:33:31, 82.12s/it]\n",
      " 64%|████████████████████████████████████████████████▋                           | 277/432 [5:34:13<3:29:12, 80.99s/it]\n",
      " 64%|████████████████████████████████████████████████▉                           | 278/432 [5:35:30<3:24:46, 79.78s/it]\n",
      " 65%|█████████████████████████████████████████████████                           | 279/432 [5:36:46<3:20:02, 78.45s/it]\n",
      " 65%|█████████████████████████████████████████████████▎                          | 280/432 [5:37:49<3:07:29, 74.01s/it]\n",
      " 65%|█████████████████████████████████████████████████▍                          | 281/432 [5:38:54<2:58:58, 71.12s/it]\n",
      " 65%|█████████████████████████████████████████████████▌                          | 282/432 [5:40:03<2:56:48, 70.72s/it]\n",
      " 66%|█████████████████████████████████████████████████▊                          | 283/432 [5:41:14<2:55:53, 70.83s/it]\n",
      " 66%|█████████████████████████████████████████████████▉                          | 284/432 [5:42:31<2:58:34, 72.39s/it]\n",
      " 66%|██████████████████████████████████████████████████▏                         | 285/432 [5:43:36<2:52:29, 70.40s/it]\n",
      " 66%|██████████████████████████████████████████████████▎                         | 286/432 [5:44:35<2:42:58, 66.98s/it]\n",
      " 66%|██████████████████████████████████████████████████▍                         | 287/432 [5:45:33<2:35:27, 64.32s/it]\n",
      " 67%|██████████████████████████████████████████████████▋                         | 288/432 [5:46:32<2:30:35, 62.75s/it]\n",
      " 67%|██████████████████████████████████████████████████▊                         | 289/432 [5:47:31<2:26:13, 61.36s/it]\n",
      " 67%|███████████████████████████████████████████████████                         | 290/432 [5:48:27<2:21:23, 59.74s/it]\n",
      " 67%|███████████████████████████████████████████████████▏                        | 291/432 [5:49:25<2:19:27, 59.35s/it]\n",
      " 68%|███████████████████████████████████████████████████▎                        | 292/432 [5:50:26<2:19:24, 59.74s/it]\n",
      " 68%|███████████████████████████████████████████████████▌                        | 293/432 [5:51:24<2:17:31, 59.36s/it]\n",
      " 68%|███████████████████████████████████████████████████▋                        | 294/432 [5:52:38<2:26:53, 63.87s/it]\n",
      " 68%|███████████████████████████████████████████████████▉                        | 295/432 [5:53:46<2:28:02, 64.83s/it]\n",
      " 69%|████████████████████████████████████████████████████                        | 296/432 [5:54:45<2:23:27, 63.29s/it]\n",
      " 69%|████████████████████████████████████████████████████▎                       | 297/432 [5:55:46<2:20:54, 62.63s/it]\n",
      " 69%|████████████████████████████████████████████████████▍                       | 298/432 [5:56:49<2:19:49, 62.61s/it]\n",
      " 69%|████████████████████████████████████████████████████▌                       | 299/432 [5:57:52<2:18:48, 62.62s/it]\n",
      " 69%|████████████████████████████████████████████████████▊                       | 300/432 [5:58:51<2:15:33, 61.62s/it]\n",
      " 70%|████████████████████████████████████████████████████▉                       | 301/432 [5:59:49<2:12:06, 60.51s/it]\n",
      " 70%|█████████████████████████████████████████████████████▏                      | 302/432 [6:00:45<2:08:23, 59.26s/it]\n",
      " 70%|█████████████████████████████████████████████████████▎                      | 303/432 [6:01:42<2:05:46, 58.50s/it]\n",
      " 70%|█████████████████████████████████████████████████████▍                      | 304/432 [6:02:38<2:03:34, 57.93s/it]\n",
      " 71%|█████████████████████████████████████████████████████▋                      | 305/432 [6:03:36<2:02:28, 57.86s/it]\n",
      " 71%|█████████████████████████████████████████████████████▊                      | 306/432 [6:04:39<2:04:41, 59.38s/it]\n",
      " 71%|██████████████████████████████████████████████████████                      | 307/432 [6:05:44<2:07:22, 61.14s/it]\n",
      " 71%|██████████████████████████████████████████████████████▏                     | 308/432 [6:06:49<2:08:48, 62.33s/it]\n",
      " 72%|██████████████████████████████████████████████████████▎                     | 309/432 [6:07:55<2:09:57, 63.39s/it]\n",
      " 72%|██████████████████████████████████████████████████████▌                     | 310/432 [6:08:58<2:08:37, 63.26s/it]\n",
      " 72%|██████████████████████████████████████████████████████▋                     | 311/432 [6:10:16<2:16:32, 67.71s/it]\n",
      " 72%|██████████████████████████████████████████████████████▉                     | 312/432 [6:11:17<2:11:18, 65.65s/it]\n",
      " 72%|███████████████████████████████████████████████████████                     | 313/432 [6:12:29<2:13:54, 67.51s/it]\n",
      " 73%|███████████████████████████████████████████████████████▏                    | 314/432 [6:13:32<2:09:49, 66.02s/it]\n",
      " 73%|███████████████████████████████████████████████████████▍                    | 315/432 [6:14:48<2:14:59, 69.22s/it]\n",
      " 73%|███████████████████████████████████████████████████████▌                    | 316/432 [6:16:05<2:18:09, 71.46s/it]\n",
      " 73%|███████████████████████████████████████████████████████▊                    | 317/432 [6:17:07<2:11:38, 68.68s/it]\n",
      " 74%|███████████████████████████████████████████████████████▉                    | 318/432 [6:18:07<2:05:43, 66.17s/it]\n",
      " 74%|████████████████████████████████████████████████████████                    | 319/432 [6:19:07<2:00:55, 64.21s/it]\n",
      " 74%|████████████████████████████████████████████████████████▎                   | 320/432 [6:20:16<2:02:40, 65.72s/it]\n",
      " 74%|████████████████████████████████████████████████████████▍                   | 321/432 [6:21:52<2:18:04, 74.63s/it]\n",
      " 75%|████████████████████████████████████████████████████████▋                   | 322/432 [6:23:19<2:23:45, 78.41s/it]\n",
      " 75%|████████████████████████████████████████████████████████▊                   | 323/432 [6:24:41<2:24:20, 79.45s/it]\n",
      " 75%|█████████████████████████████████████████████████████████                   | 324/432 [6:25:43<2:13:27, 74.14s/it]\n",
      " 75%|█████████████████████████████████████████████████████████▏                  | 325/432 [6:26:43<2:04:42, 69.93s/it]\n",
      " 75%|█████████████████████████████████████████████████████████▎                  | 326/432 [6:27:41<1:57:37, 66.58s/it]\n",
      " 76%|█████████████████████████████████████████████████████████▌                  | 327/432 [6:28:38<1:51:21, 63.63s/it]\n",
      " 76%|█████████████████████████████████████████████████████████▋                  | 328/432 [6:29:37<1:47:35, 62.07s/it]\n",
      " 76%|█████████████████████████████████████████████████████████▉                  | 329/432 [6:30:37<1:45:27, 61.43s/it]\n",
      " 76%|██████████████████████████████████████████████████████████                  | 330/432 [6:31:38<1:44:33, 61.50s/it]\n",
      " 77%|██████████████████████████████████████████████████████████▏                 | 331/432 [6:32:38<1:42:27, 60.87s/it]\n",
      " 77%|██████████████████████████████████████████████████████████▍                 | 332/432 [6:33:35<1:39:48, 59.88s/it]\n",
      " 77%|██████████████████████████████████████████████████████████▌                 | 333/432 [6:34:32<1:37:26, 59.05s/it]\n",
      " 77%|██████████████████████████████████████████████████████████▊                 | 334/432 [6:35:29<1:35:06, 58.23s/it]\n",
      " 78%|██████████████████████████████████████████████████████████▉                 | 335/432 [6:36:36<1:38:21, 60.84s/it]\n",
      " 78%|███████████████████████████████████████████████████████████                 | 336/432 [6:37:34<1:36:02, 60.02s/it]\n",
      " 78%|███████████████████████████████████████████████████████████▎                | 337/432 [6:38:34<1:34:58, 59.98s/it]\n",
      " 78%|███████████████████████████████████████████████████████████▍                | 338/432 [6:39:29<1:32:01, 58.74s/it]\n",
      " 78%|███████████████████████████████████████████████████████████▋                | 339/432 [6:40:24<1:28:55, 57.37s/it]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 79%|███████████████████████████████████████████████████████████▊                | 340/432 [6:41:18<1:26:37, 56.50s/it]\n",
      " 79%|███████████████████████████████████████████████████████████▉                | 341/432 [6:42:17<1:26:45, 57.21s/it]\n",
      " 79%|████████████████████████████████████████████████████████████▏               | 342/432 [6:43:12<1:24:50, 56.56s/it]\n",
      " 79%|████████████████████████████████████████████████████████████▎               | 343/432 [6:44:09<1:24:01, 56.64s/it]\n",
      " 80%|████████████████████████████████████████████████████████████▌               | 344/432 [6:45:03<1:22:06, 55.99s/it]\n",
      " 80%|████████████████████████████████████████████████████████████▋               | 345/432 [6:46:00<1:21:29, 56.20s/it]\n",
      " 80%|████████████████████████████████████████████████████████████▊               | 346/432 [6:46:59<1:21:39, 56.97s/it]\n",
      " 80%|█████████████████████████████████████████████████████████████               | 347/432 [6:48:07<1:25:30, 60.36s/it]\n",
      " 81%|█████████████████████████████████████████████████████████████▏              | 348/432 [6:49:04<1:23:15, 59.47s/it]\n",
      " 81%|█████████████████████████████████████████████████████████████▍              | 349/432 [6:50:04<1:22:09, 59.39s/it]\n",
      " 81%|█████████████████████████████████████████████████████████████▌              | 350/432 [6:51:00<1:20:00, 58.55s/it]\n",
      " 81%|█████████████████████████████████████████████████████████████▊              | 351/432 [6:51:56<1:17:48, 57.64s/it]\n",
      " 81%|█████████████████████████████████████████████████████████████▉              | 352/432 [6:52:49<1:15:09, 56.37s/it]\n",
      " 82%|██████████████████████████████████████████████████████████████              | 353/432 [6:53:44<1:13:37, 55.92s/it]\n",
      " 82%|██████████████████████████████████████████████████████████████▎             | 354/432 [6:54:39<1:12:30, 55.77s/it]\n",
      " 82%|██████████████████████████████████████████████████████████████▍             | 355/432 [6:55:49<1:16:58, 59.99s/it]\n",
      " 82%|██████████████████████████████████████████████████████████████▋             | 356/432 [6:56:45<1:14:12, 58.58s/it]\n",
      " 83%|██████████████████████████████████████████████████████████████▊             | 357/432 [6:57:40<1:12:00, 57.61s/it]\n",
      " 83%|██████████████████████████████████████████████████████████████▉             | 358/432 [6:58:36<1:10:31, 57.19s/it]\n",
      " 83%|███████████████████████████████████████████████████████████████▏            | 359/432 [6:59:37<1:10:48, 58.20s/it]\n",
      " 83%|███████████████████████████████████████████████████████████████▎            | 360/432 [7:00:32<1:08:39, 57.21s/it]\n",
      " 84%|███████████████████████████████████████████████████████████████▌            | 361/432 [7:01:27<1:07:09, 56.76s/it]\n",
      " 84%|███████████████████████████████████████████████████████████████▋            | 362/432 [7:02:23<1:05:45, 56.36s/it]\n",
      " 84%|███████████████████████████████████████████████████████████████▊            | 363/432 [7:03:40<1:12:00, 62.61s/it]\n",
      " 84%|████████████████████████████████████████████████████████████████            | 364/432 [7:04:45<1:11:43, 63.28s/it]\n",
      " 84%|████████████████████████████████████████████████████████████████▏           | 365/432 [7:05:48<1:10:29, 63.13s/it]\n",
      " 85%|████████████████████████████████████████████████████████████████▍           | 366/432 [7:06:51<1:09:27, 63.14s/it]\n",
      " 85%|████████████████████████████████████████████████████████████████▌           | 367/432 [7:07:57<1:09:22, 64.04s/it]\n",
      " 85%|████████████████████████████████████████████████████████████████▋           | 368/432 [7:08:57<1:07:02, 62.85s/it]\n",
      " 85%|████████████████████████████████████████████████████████████████▉           | 369/432 [7:09:57<1:05:05, 61.99s/it]\n",
      " 86%|█████████████████████████████████████████████████████████████████           | 370/432 [7:10:56<1:03:07, 61.08s/it]\n",
      " 86%|█████████████████████████████████████████████████████████████████▎          | 371/432 [7:11:53<1:00:48, 59.81s/it]\n",
      " 86%|███████████████████████████████████████████████████████████████████▏          | 372/432 [7:12:52<59:42, 59.71s/it]\n",
      " 86%|███████████████████████████████████████████████████████████████████▎          | 373/432 [7:13:51<58:19, 59.31s/it]\n",
      " 87%|███████████████████████████████████████████████████████████████████▌          | 374/432 [7:14:55<58:49, 60.85s/it]\n",
      " 87%|█████████████████████████████████████████████████████████████████▉          | 375/432 [7:16:07<1:00:59, 64.21s/it]\n",
      " 87%|██████████████████████████████████████████████████████████████████▏         | 376/432 [7:17:23<1:03:06, 67.62s/it]\n",
      " 87%|████████████████████████████████████████████████████████████████████          | 377/432 [7:18:20<59:13, 64.61s/it]\n",
      " 88%|████████████████████████████████████████████████████████████████████▎         | 378/432 [7:19:17<55:58, 62.19s/it]\n",
      " 88%|████████████████████████████████████████████████████████████████████▍         | 379/432 [7:20:25<56:31, 63.99s/it]\n",
      " 88%|██████████████████████████████████████████████████████████████████▊         | 380/432 [7:21:50<1:01:00, 70.39s/it]\n",
      " 88%|███████████████████████████████████████████████████████████████████         | 381/432 [7:23:01<1:00:00, 70.60s/it]\n",
      " 88%|████████████████████████████████████████████████████████████████████▉         | 382/432 [7:23:59<55:40, 66.82s/it]\n",
      " 89%|█████████████████████████████████████████████████████████████████████▏        | 383/432 [7:24:59<52:43, 64.55s/it]\n",
      " 89%|█████████████████████████████████████████████████████████████████████▎        | 384/432 [7:25:56<49:50, 62.30s/it]\n",
      " 89%|█████████████████████████████████████████████████████████████████████▌        | 385/432 [7:26:54<47:53, 61.14s/it]\n",
      " 89%|█████████████████████████████████████████████████████████████████████▋        | 386/432 [7:27:51<45:51, 59.82s/it]\n",
      " 90%|█████████████████████████████████████████████████████████████████████▉        | 387/432 [7:28:51<45:01, 60.04s/it]\n",
      " 90%|██████████████████████████████████████████████████████████████████████        | 388/432 [7:29:58<45:25, 61.94s/it]\n",
      " 90%|██████████████████████████████████████████████████████████████████████▏       | 389/432 [7:31:17<48:07, 67.15s/it]\n",
      " 90%|██████████████████████████████████████████████████████████████████████▍       | 390/432 [7:32:30<48:10, 68.81s/it]\n",
      " 91%|██████████████████████████████████████████████████████████████████████▌       | 391/432 [7:33:49<49:12, 72.02s/it]\n",
      " 91%|██████████████████████████████████████████████████████████████████████▊       | 392/432 [7:35:06<49:01, 73.53s/it]\n",
      " 91%|██████████████████████████████████████████████████████████████████████▉       | 393/432 [7:36:21<48:03, 73.94s/it]\n",
      " 91%|███████████████████████████████████████████████████████████████████████▏      | 394/432 [7:37:43<48:20, 76.32s/it]\n",
      " 91%|███████████████████████████████████████████████████████████████████████▎      | 395/432 [7:39:07<48:22, 78.46s/it]\n",
      " 92%|███████████████████████████████████████████████████████████████████████▌      | 396/432 [7:40:33<48:29, 80.82s/it]\n",
      " 92%|███████████████████████████████████████████████████████████████████████▋      | 397/432 [7:41:55<47:26, 81.34s/it]\n",
      " 92%|███████████████████████████████████████████████████████████████████████▊      | 398/432 [7:43:11<45:03, 79.51s/it]\n",
      " 92%|████████████████████████████████████████████████████████████████████████      | 399/432 [7:44:29<43:35, 79.27s/it]\n",
      " 93%|████████████████████████████████████████████████████████████████████████▏     | 400/432 [7:45:49<42:24, 79.52s/it]\n",
      " 93%|████████████████████████████████████████████████████████████████████████▍     | 401/432 [7:47:08<40:53, 79.14s/it]\n",
      " 93%|████████████████████████████████████████████████████████████████████████▌     | 402/432 [7:48:33<40:32, 81.08s/it]\n",
      " 93%|████████████████████████████████████████████████████████████████████████▊     | 403/432 [7:50:04<40:34, 83.96s/it]\n",
      " 94%|████████████████████████████████████████████████████████████████████████▉     | 404/432 [7:51:39<40:42, 87.24s/it]\n",
      " 94%|█████████████████████████████████████████████████████████████████████████▏    | 405/432 [7:53:09<39:35, 87.99s/it]\n",
      " 94%|█████████████████████████████████████████████████████████████████████████▎    | 406/432 [7:54:41<38:40, 89.26s/it]\n",
      " 94%|█████████████████████████████████████████████████████████████████████████▍    | 407/432 [7:55:54<35:13, 84.54s/it]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      " 94%|█████████████████████████████████████████████████████████████████████████▋    | 408/432 [7:57:07<32:25, 81.08s/it]\n",
      " 95%|█████████████████████████████████████████████████████████████████████████▊    | 409/432 [7:58:33<31:38, 82.53s/it]\n",
      " 95%|██████████████████████████████████████████████████████████████████████████    | 410/432 [7:59:50<29:39, 80.87s/it]\n",
      " 95%|██████████████████████████████████████████████████████████████████████████▏   | 411/432 [8:01:08<28:00, 80.04s/it]\n",
      " 95%|██████████████████████████████████████████████████████████████████████████▍   | 412/432 [8:02:26<26:25, 79.27s/it]\n",
      " 96%|██████████████████████████████████████████████████████████████████████████▌   | 413/432 [8:03:45<25:03, 79.13s/it]\n",
      " 96%|██████████████████████████████████████████████████████████████████████████▊   | 414/432 [8:05:01<23:31, 78.40s/it]\n",
      " 96%|██████████████████████████████████████████████████████████████████████████▉   | 415/432 [8:06:23<22:29, 79.37s/it]\n",
      " 96%|███████████████████████████████████████████████████████████████████████████   | 416/432 [8:07:45<21:23, 80.22s/it]\n",
      " 97%|███████████████████████████████████████████████████████████████████████████▎  | 417/432 [8:09:06<20:05, 80.33s/it]\n",
      " 97%|███████████████████████████████████████████████████████████████████████████▍  | 418/432 [8:10:29<18:55, 81.10s/it]\n",
      " 97%|███████████████████████████████████████████████████████████████████████████▋  | 419/432 [8:11:54<17:50, 82.37s/it]\n",
      " 97%|██████████████████████████████████████████████████████████████████████████▊  | 420/432 [8:14:23<20:29, 102.48s/it]\n",
      " 97%|███████████████████████████████████████████████████████████████████████████  | 421/432 [8:16:28<20:00, 109.17s/it]\n",
      " 98%|███████████████████████████████████████████████████████████████████████████▏ | 422/432 [8:18:16<18:08, 108.85s/it]\n",
      " 98%|███████████████████████████████████████████████████████████████████████████▍ | 423/432 [8:20:02<16:12, 108.05s/it]\n",
      " 98%|███████████████████████████████████████████████████████████████████████████▌ | 424/432 [8:22:17<15:28, 116.03s/it]\n",
      " 98%|███████████████████████████████████████████████████████████████████████████▊ | 425/432 [8:23:51<12:45, 109.33s/it]\n",
      " 99%|███████████████████████████████████████████████████████████████████████████▉ | 426/432 [8:25:43<11:00, 110.12s/it]\n",
      " 99%|████████████████████████████████████████████████████████████████████████████ | 427/432 [8:27:13<08:40, 104.10s/it]\n",
      " 99%|████████████████████████████████████████████████████████████████████████████▎| 428/432 [8:28:55<06:53, 103.40s/it]\n",
      " 99%|█████████████████████████████████████████████████████████████████████████████▍| 429/432 [8:30:09<04:44, 94.84s/it]\n",
      "100%|█████████████████████████████████████████████████████████████████████████████▋| 430/432 [8:31:52<03:14, 97.10s/it]\n",
      "100%|█████████████████████████████████████████████████████████████████████████████▊| 431/432 [8:33:12<01:32, 92.16s/it]\n",
      "100%|██████████████████████████████████████████████████████████████████████████████| 432/432 [8:34:32<00:00, 88.43s/it]\n"
     ]
    }
   ],
   "source": [
    "team_stats = {}\n",
    "for date, dhref in tqdm.tqdm(dates_href.items()):\n",
    "    for team, thref in full_teams_href.items():\n",
    "        url_team = 'https://sofifa.com'+thref+dhref\n",
    "        html_team = BeautifulSoup(simple_get(url_team), 'html.parser')\n",
    "        \n",
    "        span = html_team.find('div', attrs={'class': 'card-body stats'}).find_all('span')\n",
    "        span_label = (html_team\n",
    "                      .find('div', attrs={'class': 'card-body stats'})\n",
    "                      .find_all('span', attrs={'class': re.compile(\"label.+\")}))\n",
    "        \n",
    "        overall = float(span_label[0].get_text())\n",
    "        attack = float(span_label[1].get_text())\n",
    "        midfield = float(span_label[2].get_text())\n",
    "        defence = float(span_label[3].get_text())\n",
    "\n",
    "        prestige = float(html_team.find(string='International Prestige').find_next('span').get_text())\n",
    "        start_age = float(html_team.find(string='Starting XI Average Age').next_element)\n",
    "        full_age = float(html_team.find(string='Whole Team Average Age').next_element)\n",
    "        \n",
    "        team_stats[(team, date)] = {\n",
    "            'overall': overall,\n",
    "            'attack': attack,\n",
    "            'midfield': midfield,\n",
    "            'defence': defence,\n",
    "            'prestige': prestige,\n",
    "            'start_age': start_age,\n",
    "            'full_age': full_age\n",
    "        }\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "team_stats_df = pd.DataFrame(team_stats).T.reset_index()\n",
    "team_stats_df.columns = ['team', 'date', 'attack', 'defence', 'full_age', \n",
    "                         'midfield', 'overall', 'prestige', 'start_age']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "team_stats_df.to_csv('../datasets/sofifa/team_stats.csv',index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We could also obtain the player data for each of the national teams at each of the dates represented. However, we first write a function to find all the player information for a given national team at a given point in time."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_players_href(team_href, date_url):\n",
    "    \"\"\"Given a team href and a segment of a date url, corresponding to a specific update of FIFA 18\n",
    "    returns a list of all players in the team, and a list of all \n",
    "    players href in the team, for all teams\"\"\"\n",
    "    url_team = 'https://sofifa.com'+team_href+date_url \n",
    "    html_team = BeautifulSoup(simple_get(url_team), 'html.parser')\n",
    "\n",
    "    player_href = {}\n",
    "    for link in html_team.find_all('a', attrs={'href': re.compile(\"^/player/.+\")}):\n",
    "        if link.get_text() not in player_href:\n",
    "            player_href[link.get_text()] = link.get('href')\n",
    "    \n",
    "    return player_href"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We now have the players href for a national team at a given point in time. We now have to obtain all the information for each of the players from these hrefs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_players(player_href, date_url):\n",
    "    \"\"\"Given a players href,  and a segment of a date url, corresponding to a specific update of FIFA 18,\n",
    "    returns the summary data for that player\"\"\"\n",
    "\n",
    "    url_player = 'https://sofifa.com'+player_href+date_url\n",
    "    html_player = BeautifulSoup(simple_get(url_player), 'html.parser')\n",
    "\n",
    "    h1 = html_player.find('h1')\n",
    "\n",
    "    name_id = h1.get_text()\n",
    "    name = name_id.split('(')[0]\n",
    "    ID = re.search(r'\\((.+)\\)', name_id).group(1).split(' ')[-1]\n",
    "    full_name = h1.find_next('div').next_element.strip()\n",
    "    \n",
    "    # account for multiple preferred positions\n",
    "    position = ''\n",
    "    for p in h1.find_next('div').find_all('span'):\n",
    "        pos = p.get_text()+' '\n",
    "        position += pos\n",
    "    position.strip()\n",
    "\n",
    "    age = re.search(r'Age (\\d+) .+' , h1.find_next('div').find_all('span')[-1].next_sibling).group(1)\n",
    "            \n",
    "    # account for +/- signs\n",
    "    span = html_player.find('div', attrs={'class': 'card-body stats'}).find_all('span')\n",
    "    span_label = (html_player\n",
    "                  .find('div', attrs={'class': 'card-body stats'})\n",
    "                  .find_all('span', attrs={'class': re.compile(\"label.+\")}))\n",
    "            \n",
    "    overall = float(span_label[0].get_text())\n",
    "    potential = float(span_label[1].get_text())\n",
    "    value = span[-2].get_text()\n",
    "    wage = span[-1].get_text()\n",
    "    \n",
    "    # account for different order of clubs and national teams\n",
    "    club_nation = html_player.find_all('figure', attrs={'class': \"avatar avatar-sm\"})\n",
    "    cn0 = club_nation[0].find_next('a', attrs={'href': re.compile(\"^/team/.*\")})\n",
    "    if len(club_nation) > 1:\n",
    "        cn1 = club_nation[1].find_next('a', attrs={'href': re.compile(\"^/team/.*\")})\n",
    "        if cn0.get_text() == tname:\n",
    "            club = cn1.get_text()\n",
    "            club_rating = float(cn1.find_next('span').get_text())\n",
    "            team = cn0.get_text()\n",
    "            team_rating = float(cn0.find_next('span').get_text())\n",
    "        else:\n",
    "            club = cn0.get_text()\n",
    "            club_rating = float(cn0.find_next('span').get_text())\n",
    "            team = cn1.get_text()\n",
    "            team_rating = float(cn1.find_next('span').get_text())\n",
    "    else:\n",
    "        if cn0.get_text() == tname:\n",
    "            club = None\n",
    "            club_rating = np.nan\n",
    "            team = cn0.get_text()\n",
    "            team_rating = float(cn0.find_next('span').get_text())\n",
    "        else:\n",
    "            club = cn0.get_text()\n",
    "            club_rating = float(cn0.find_next('span').get_text())\n",
    "            team = tname\n",
    "            team_rating = np.nan\n",
    "            \n",
    "    # player statistics\n",
    "    r1 = html_player.find('div', attrs={'class': 'mt-2 mb-2'})\n",
    "    r1_dat = r1.find_all('span', attrs={'class': re.compile('^label.+')})\n",
    "    r2_dat = (r1.find_next('div', attrs={'class': 'mb-2'})\n",
    "              .find_all('span', attrs={'class': re.compile('^label.+')}))\n",
    "            \n",
    "    stats = [val for val in r1_dat]+[val for val in r2_dat]\n",
    "            \n",
    "    return ID, name, full_name, position, age, overall, potential, value, wage, club, club_rating, team, team_rating, stats\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  0%|                                                                                          | 0/432 [00:00<?, ?it/s]\n"
     ]
    },
    {
     "ename": "NameError",
     "evalue": "name 'tname' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-62-2ebd7cac4874>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      3\u001b[0m     \u001b[1;32mfor\u001b[0m \u001b[0mteam\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mthref\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mfull_teams_href\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m         \u001b[1;32mfor\u001b[0m \u001b[0mplayer\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mphref\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mget_players_href\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mthref\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdhref\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 5\u001b[1;33m             \u001b[0mID\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mname\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mfull_name\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mposition\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mage\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0moverall\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mpotential\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mwage\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mclub\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mclub_rating\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mteam\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mteam_rating\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mstats\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mget_players\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mphref\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdhref\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      6\u001b[0m             summary[(ID, date)] = {\n\u001b[0;32m      7\u001b[0m                 \u001b[1;34m'name'\u001b[0m\u001b[1;33m:\u001b[0m \u001b[0mname\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m<ipython-input-60-86e089bd2e95>\u001b[0m in \u001b[0;36mget_players\u001b[1;34m(player_href, date_url)\u001b[0m\n\u001b[0;32m     49\u001b[0m             \u001b[0mteam_rating\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfloat\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mcn1\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfind_next\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'span'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_text\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     50\u001b[0m     \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 51\u001b[1;33m         \u001b[1;32mif\u001b[0m \u001b[0mcn0\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_text\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m==\u001b[0m \u001b[0mtname\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     52\u001b[0m             \u001b[0mclub\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     53\u001b[0m             \u001b[0mclub_rating\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnan\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'tname' is not defined"
     ]
    }
   ],
   "source": [
    "summary = {}\n",
    "for date, dhref in tqdm.tqdm(dates_href.items()):\n",
    "    for team, thref in full_teams_href.items():\n",
    "        for player, phref in get_players_href(thref, dhref).items():\n",
    "            ID, name, full_name, position, age, overall, potential, value, wage, club, club_rating, team, team_rating, stats = get_players(phref, dhref)\n",
    "            summary[(ID, date)] = {\n",
    "                'name': name,\n",
    "                'full_name': full_name,\n",
    "                'position': position,\n",
    "                'age': age,\n",
    "                'overall': overall,\n",
    "                'potential': potential,\n",
    "                'value': value,\n",
    "                'wage': wage,\n",
    "                'club': club,\n",
    "                'club_rating': club_rating,\n",
    "                'team': team,\n",
    "                'team_rating': team_rating,\n",
    "                'stats': stats\n",
    "            }"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
